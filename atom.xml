<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ksk Notes</title>
  
  
  <link href="/kskBlog/atom.xml" rel="self"/>
  
  <link href="https://ksk0014.github.io/kskBlog/"/>
  <updated>2018-05-04T14:48:38.229Z</updated>
  <id>https://ksk0014.github.io/kskBlog/</id>
  
  <author>
    <name>烫烫烫烫烫</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NFS协议层面问题定位方法</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/NFS%E5%8D%8F%E8%AE%AE%E5%B1%82%E9%9D%A2%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D%E6%96%B9%E6%B3%95/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/NFS协议层面问题定位方法/</id>
    <published>2018-05-04T13:54:31.000Z</published>
    <updated>2018-05-04T14:48:38.229Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="测试工具" scheme="https://ksk0014.github.io/kskBlog/categories/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Protocols" scheme="https://ksk0014.github.io/kskBlog/tags/Protocols/"/>
    
  </entry>
  
  <entry>
    <title>分布式文件系统性能测试</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/分布式文件系统性能测试/</id>
    <published>2018-05-04T13:54:04.000Z</published>
    <updated>2018-05-04T13:54:04.224Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>分布式文件系统posix语义测试</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9Fposix%E8%AF%AD%E4%B9%89%E6%B5%8B%E8%AF%95/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/分布式文件系统posix语义测试/</id>
    <published>2018-05-04T13:53:45.000Z</published>
    <updated>2018-05-04T13:53:45.814Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>分布式文件系统协议测试</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%8D%8F%E8%AE%AE%E6%B5%8B%E8%AF%95/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/分布式文件系统协议测试/</id>
    <published>2018-05-04T13:53:23.000Z</published>
    <updated>2018-05-04T13:53:23.763Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>云上块存储、对象存储、文件存储产品定位</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E4%BA%91%E4%B8%8A%E5%9D%97%E5%AD%98%E5%82%A8%E3%80%81%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E3%80%81%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E4%BA%A7%E5%93%81%E5%AE%9A%E4%BD%8D/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/云上块存储、对象存储、文件存储产品定位/</id>
    <published>2018-05-04T13:51:42.000Z</published>
    <updated>2018-05-04T14:49:52.091Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="产品设计" scheme="https://ksk0014.github.io/kskBlog/categories/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Products" scheme="https://ksk0014.github.io/kskBlog/tags/Products/"/>
    
  </entry>
  
  <entry>
    <title>文件传输协议-NFS</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE-NFS/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/文件传输协议-NFS/</id>
    <published>2018-05-04T13:50:18.000Z</published>
    <updated>2018-05-04T13:50:18.717Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>存储协议-iSCSI</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E5%AD%98%E5%82%A8%E5%8D%8F%E8%AE%AE-iSCSI/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/存储协议-iSCSI/</id>
    <published>2018-05-04T13:49:13.000Z</published>
    <updated>2018-05-04T13:49:13.857Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>分布式存储异常测试</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E5%BC%82%E5%B8%B8%E6%B5%8B%E8%AF%95/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/分布式存储异常测试/</id>
    <published>2018-05-04T13:47:14.000Z</published>
    <updated>2018-05-04T14:51:42.288Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="测试设计" scheme="https://ksk0014.github.io/kskBlog/categories/%E6%B5%8B%E8%AF%95%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Testing Phase" scheme="https://ksk0014.github.io/kskBlog/tags/Testing-Phase/"/>
    
      <category term="Block Storage" scheme="https://ksk0014.github.io/kskBlog/tags/Block-Storage/"/>
    
  </entry>
  
  <entry>
    <title>测试管理框架-rally</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6-rally/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/测试管理框架-rally/</id>
    <published>2018-05-04T13:46:50.000Z</published>
    <updated>2018-05-04T14:12:31.347Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="测试管理" scheme="https://ksk0014.github.io/kskBlog/categories/%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="Testing Framework" scheme="https://ksk0014.github.io/kskBlog/tags/Testing-Framework/"/>
    
  </entry>
  
  <entry>
    <title>测试管理框架-testtools</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6-testtools/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/测试管理框架-testtools/</id>
    <published>2018-05-04T13:46:05.000Z</published>
    <updated>2018-05-04T13:46:05.956Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>测试管理框架-nosetest</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6-nosetest/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/测试管理框架-nosetest/</id>
    <published>2018-05-04T13:45:35.000Z</published>
    <updated>2018-05-04T14:10:38.528Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="测试管理" scheme="https://ksk0014.github.io/kskBlog/categories/%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="Testing Framework" scheme="https://ksk0014.github.io/kskBlog/tags/Testing-Framework/"/>
    
  </entry>
  
  <entry>
    <title>测试管理框架-testrepository</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6-testrepository/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/测试管理框架-testrepository/</id>
    <published>2018-05-04T13:45:24.000Z</published>
    <updated>2018-05-04T13:45:24.150Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>测试管理框架-sigmund</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6-sigmund/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/测试管理框架-sigmund/</id>
    <published>2018-05-04T13:44:31.000Z</published>
    <updated>2018-05-04T13:44:32.012Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>分布式存储质量保障体系</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E8%B4%A8%E9%87%8F%E4%BF%9D%E9%9A%9C%E4%BD%93%E7%B3%BB/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/分布式存储质量保障体系/</id>
    <published>2018-05-04T13:42:32.000Z</published>
    <updated>2018-05-04T14:52:46.951Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="测试设计" scheme="https://ksk0014.github.io/kskBlog/categories/%E6%B5%8B%E8%AF%95%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Testing Framework" scheme="https://ksk0014.github.io/kskBlog/tags/Testing-Framework/"/>
    
  </entry>
  
  <entry>
    <title>分布式系统部署工具</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B2%E5%B7%A5%E5%85%B7/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/分布式系统部署工具/</id>
    <published>2018-05-04T11:37:45.000Z</published>
    <updated>2018-05-04T11:37:45.791Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>块存储性能测试</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E5%9D%97%E5%AD%98%E5%82%A8%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/块存储性能测试/</id>
    <published>2018-05-04T11:37:02.000Z</published>
    <updated>2018-05-05T05:02:16.143Z</updated>
    
    <content type="html"><![CDATA[<h2 id="业务需求"><a href="#业务需求" class="headerlink" title="业务需求"></a>业务需求</h2><p>块存储服务推出后，需要针对各种产品宣称性能做基准性能评估。存储领域中性能评估指标主要分为三类IOPS、throughput、latency</p><p>目前业界对于块存储的产品划分情况如下:</p><table><thead><tr><th style="text-align:left">产品类型</th><th style="text-align:left">性能特点</th><th style="text-align:left">应用场景</th><th style="text-align:left">主流厂商支持情况</th></tr></thead><tbody><tr><td style="text-align:left">near local</td><td style="text-align:left">&gt;= 本地ssd盘性能</td><td style="text-align:left">大型OLTP数据库/NoSQL数据库/ELK分布式日志</td><td style="text-align:left">阿里云ESSD</td></tr><tr><td style="text-align:left">SSD云盘</td><td style="text-align:left">20000IOPS左右</td><td style="text-align:left">I/O密集型应用/中型关系数据库/NoSQL数据库</td><td style="text-align:left">主流厂商均支持</td></tr><tr><td style="text-align:left">高效云盘</td><td style="text-align:left">性能够用就好，5000IOPS左右</td><td style="text-align:left">开发与测试业务/小型负载数据库/系统盘</td><td style="text-align:left">主流厂商均支持</td></tr><tr><td style="text-align:left">普通云盘</td><td style="text-align:left">sata介质，吞吐优化型500MBps，冷存储250MBps以下</td><td style="text-align:left">大数据/数据仓库/日志处理</td><td style="text-align:left">aws划分更细致，阿里云已淘汰</td></tr></tbody></table><h2 id="分层测试框架"><a href="#分层测试框架" class="headerlink" title="分层测试框架"></a>分层测试框架</h2><p>分布式块存储性能测试考量需要覆盖以下的层次:</p><ol><li><p>系统网络性能、物理磁盘性能测试</p></li><li><p>存储核心系统读写性能测试，stress_tool、data_consistency_tool</p></li><li><p>宿主机上云盘性能、以及虚拟机上的云盘性能，PTS测试模型，fio</p></li><li><p>设备上文件系统性能测试，filebench，iozone等等</p></li><li><p>实际应用负载测试，sysbench OLTP、分布式数据分析框架IO负载仿真</p></li><li><p>用户常用操作的易用性</p></li></ol><p>块存储性能测试需要从两个视角看：</p><ul><li>用户维度：针对系统中单一卷实例可以获得稳定且可预期的性能，更多关注上述3 ~ 6的测试层次，本文主要讲解第3个层次的测试设计</li><li>集群维度：针对集群可服务能力的性能评估，保障系统整体稳定可控，更多关注上述1 ~ 2的测试层次</li></ul><h2 id="PTS测试模型"><a href="#PTS测试模型" class="headerlink" title="PTS测试模型"></a>PTS测试模型</h2><p><strong>PTS：</strong> Solid State Storage Performance Test Specification<br>SNIA固态存储性能测试标准，相关文档参见 <a href="https://www.snia.org/sites/default/files/technical_work/PTS/SSS_PTS_2.0.1.pdf" target="_blank" rel="noopener">SSS_PTS_2.0.1.pdf</a></p><p>本文测试设计主要参考上述文档，并针对云环境做了相应适配</p><h3 id="测试步骤"><a href="#测试步骤" class="headerlink" title="测试步骤"></a>测试步骤</h3><p>根据 PTS 规范，SSD 性能测试需要经过以下四个步骤：</p><ol><li><p>净化（purge）：通过擦除数据，将 SSD 置于接近 FOB 状态。</p></li><li><p>事先准备工作负载（WIPC）：写入规定的数据到整个 SSD，帮助其达到稳态。</p></li><li><p>正式测试之前的准备工作（WDPC）：循环运行测试，直到 SSD 进入稳态。</p></li><li><p>测试：当 SSD 进入稳态时开始测试。</p></li></ol><p>备注:</p><p><em>FOB:</em> Fresh of Box，新鲜出盒，即硬盘刚买来的状态</p><p><em>稳态:</em> 性能波动范围小于预先设定的阈值</p><h3 id="测试项"><a href="#测试项" class="headerlink" title="测试项"></a>测试项</h3><h4 id="IOPS测试"><a href="#IOPS测试" class="headerlink" title="IOPS测试"></a>IOPS测试</h4><p>测试在不同block size与不同的read/write 比的混合下随机IO的性能</p><p>block size：100/0, 95/5, 65/35, 50/50, 35/65, 5/95, 0/100 </p><p>read/write：1024KiB, 128KiB, 64KiB, 32KiB, 16KiB, 8KiB, 4KiB, 0.5KiB </p><p>磁盘IO的范围：100% volume size</p><p>（1）purge</p><p>（2）WIPC：128k顺序写2倍的磁盘空间</p><p>（3）WDPC：上述工作负载（bs，r/w） loop运行</p><p>（4）稳态判定：取相邻4轮的4kb 随机 0/100的iops，相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口</p><p>测试数据，取稳态窗口的均值</p><h4 id="Throughput测试"><a href="#Throughput测试" class="headerlink" title="Throughput测试"></a>Throughput测试</h4><p>测试在稳态的128k与1m的顺序读与顺序写的吞吐</p><p>磁盘IO的范围：100% volume size</p><p>（1）purge</p><p>（2）WIPC：128k顺序写或1M的顺序写2倍的磁盘空间</p><p>（3）WDPC：bs(128k,1M)和rw(100/0, 0/100) 顺序IO，loop，记录吞吐量</p><p>（4）稳态判定：取相邻4轮的吞吐，相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口</p><p>测试数据，取稳态窗口的均值</p><h4 id="延迟测试"><a href="#延迟测试" class="headerlink" title="延迟测试"></a>延迟测试</h4><p>测试在3种block sizes（0.5k，4k和8k），与三种读/写 比（100/0，65/35，0/100）混合下IO响应时间</p><p>磁盘IO的范围：100% volume size</p><p>（1）purge</p><p>（2）WIPC：128k顺序写2倍的磁盘空间</p><p>（3）WDPC：bs(0.5k, 4k, 8k)和rw(100/0,  65/35, 0/100) 随机IO，loop，记录最大延迟与平均延迟</p><p>（4）稳态判定：取相邻4轮的平均延迟（0/100，4k），相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口</p><p>测试数据，取稳态窗口的均值</p><h4 id="稳定性测试"><a href="#稳定性测试" class="headerlink" title="稳定性测试"></a>稳定性测试</h4><p>测试SSD性能是随着时间以及写入量的增加是如何变化的（1min的检测穿插着30分钟的WAST测试）</p><p>（1）purge</p><p>（2）4k的随机写（100%），持续写入达到4倍的磁盘大小或者达到24h或者达到5轮的稳态（满足其一即可）</p><p>（3）iostat统计磁盘读写性能数据，取fio延迟波动方差的数据</p><h2 id="测试工具"><a href="#测试工具" class="headerlink" title="测试工具"></a>测试工具</h2><p>代码路径: <a href="https://github.com/ksk0014/block-storage-benchamrk" target="_blank" rel="noopener">https://github.com/ksk0014/block-storage-benchamrk</a></p><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p>测试结果保存在文件中，格式如下图:</p><p><img src="/kskBlog/2018/05/04/块存储性能测试/perf_tool_result.jpeg" alt="性能测试结果"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;业务需求&quot;&gt;&lt;a href=&quot;#业务需求&quot; class=&quot;headerlink&quot; title=&quot;业务需求&quot;&gt;&lt;/a&gt;业务需求&lt;/h2&gt;&lt;p&gt;块存储服务推出后，需要针对各种产品宣称性能做基准性能评估。存储领域中性能评估指标主要分为三类IOPS、throughput、
      
    
    </summary>
    
      <category term="测试设计" scheme="https://ksk0014.github.io/kskBlog/categories/%E6%B5%8B%E8%AF%95%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Testing Phase" scheme="https://ksk0014.github.io/kskBlog/tags/Testing-Phase/"/>
    
  </entry>
  
</feed>
