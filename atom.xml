<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ksk Notes</title>
  
  
  <link href="/kskBlog/atom.xml" rel="self"/>
  
  <link href="https://ksk0014.github.io/kskBlog/"/>
  <updated>2018-05-05T05:39:05.677Z</updated>
  <id>https://ksk0014.github.io/kskBlog/</id>
  
  <author>
    <name>烫烫烫烫烫</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>分布式存储质量保障体系</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E8%B4%A8%E9%87%8F%E4%BF%9D%E9%9A%9C%E4%BD%93%E7%B3%BB/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/分布式存储质量保障体系/</id>
    <published>2018-05-04T13:42:32.000Z</published>
    <updated>2018-05-05T05:39:05.677Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试流程"><a href="#测试流程" class="headerlink" title="测试流程"></a>测试流程</h1><p>代码review  –&gt; UT（L1）–&gt; L2（简单功能测试）–&gt; L3（全量回归测试）–&gt; 异常环境 –&gt; 集成测试 –&gt; 性能测试 –&gt;  自动上线 –&gt; 线上灰度测试</p><h1 id="测试流程功能简述"><a href="#测试流程功能简述" class="headerlink" title="测试流程功能简述"></a>测试流程功能简述</h1><p>代码review：主要是代码规范性检查，coding风格、代码书写合理性（项目高工查），测试人员需要关注log打印是否合理、是否有冗余或缺失、日志级别是否合理</p><ul><li>UT：auto trigger，UT测试代码由研发人员负责编写，测试人员需要维护UT测试环境、推动单测问题解决、推动单测覆盖率提升</li><li>L2：auto trigger，测试用例为全量测试中的一小部分，测试时长在30分钟以内，目的是快速发现CI代码在基本接口功能上面存在的问题，及时推动研发人员解决</li><li>L3：daily build，全量测试，考察代码在复杂场景下、单个异常下运行情况，测试时间应当在12h以内，测试问题第二天及时反馈RD解决，问题绝不过夜</li><li>failover：hand trigger，全量回归三轮无异常，版本拉分支进入异常环境，多种异常混合、持续压力、异常预案演练、集群服务能力评估，运行三天无问题，产出测试报告</li><li>集成测试：hand trigger upgrade，failover环境三天无问题，版本进入集成环境，版本兼容性测试、上下游模块对接测试，观察三天</li><li>性能测试：hand trigger，集成环境三天无异常，开始集群性能测试，观察版本间性能是否存在回退，如存在推动定位调优，产出性能测试报告</li><li>自动上线：hand trigger，借助变更平台上线</li><li>线上灰度测试：版本上线时触发，代码相对简单，测试需要关注的是平台维护、报警信息补全完善</li></ul><h1 id="新patch测试须知"><a href="#新patch测试须知" class="headerlink" title="新patch测试须知"></a>新patch测试须知</h1><ol><li>功能设计阶段：参与设计讨论</li><li>功能开发阶段：与研发功能确认接口，开发对应测试用例，编写测试方案设计文档</li><li>功能提测阶段：review功能实现逻辑，最好能看懂业务逻辑层面的代码，调通新增测试用例，加入回归测试</li><li>功能验收阶段：稳定回归3轮，有问题及时推动解决，问题绝不过夜，及时更新测试进度记录文档</li><li>分支测试阶段：功能验收通过，推入failover环境，有问题及时推动解决，产出测试报告</li><li>集成环境观察阶段：上线集成环境，观察兼容性、联调上下游环境、性能回退，产出测试报告</li><li>最后上线阶段：冒烟测试</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;测试流程&quot;&gt;&lt;a href=&quot;#测试流程&quot; class=&quot;headerlink&quot; title=&quot;测试流程&quot;&gt;&lt;/a&gt;测试流程&lt;/h1&gt;&lt;p&gt;代码review  –&amp;gt; UT（L1）–&amp;gt; L2（简单功能测试）–&amp;gt; L3（全量回归测试）–&amp;gt; 异常
      
    
    </summary>
    
      <category term="测试设计" scheme="https://ksk0014.github.io/kskBlog/categories/%E6%B5%8B%E8%AF%95%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Testing Framework" scheme="https://ksk0014.github.io/kskBlog/tags/Testing-Framework/"/>
    
  </entry>
  
  <entry>
    <title>块存储性能测试</title>
    <link href="https://ksk0014.github.io/kskBlog/2018/05/04/%E5%9D%97%E5%AD%98%E5%82%A8%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <id>https://ksk0014.github.io/kskBlog/2018/05/04/块存储性能测试/</id>
    <published>2018-05-04T11:37:02.000Z</published>
    <updated>2018-05-05T05:40:59.248Z</updated>
    
    <content type="html"><![CDATA[<h2 id="业务需求"><a href="#业务需求" class="headerlink" title="业务需求"></a>业务需求</h2><p>块存储服务推出后，需要针对各种产品宣称性能做基准性能评估。存储领域中性能评估指标主要分为三类IOPS、throughput、latency</p><p>目前业界对于块存储的产品划分情况如下:</p><table><thead><tr><th style="text-align:left">产品类型</th><th style="text-align:left">性能特点</th><th style="text-align:left">应用场景</th><th style="text-align:left">主流厂商支持情况</th></tr></thead><tbody><tr><td style="text-align:left">near local</td><td style="text-align:left">&gt;= 本地ssd盘性能</td><td style="text-align:left">大型OLTP数据库/NoSQL数据库/ELK分布式日志</td><td style="text-align:left">阿里云ESSD</td></tr><tr><td style="text-align:left">SSD云盘</td><td style="text-align:left">20000IOPS左右</td><td style="text-align:left">I/O密集型应用/中型关系数据库/NoSQL数据库</td><td style="text-align:left">主流厂商均支持</td></tr><tr><td style="text-align:left">高效云盘</td><td style="text-align:left">性能够用就好，5000IOPS左右</td><td style="text-align:left">开发与测试业务/小型负载数据库/系统盘</td><td style="text-align:left">主流厂商均支持</td></tr><tr><td style="text-align:left">普通云盘</td><td style="text-align:left">sata介质，吞吐优化型500MBps，冷存储250MBps以下</td><td style="text-align:left">大数据/数据仓库/日志处理</td><td style="text-align:left">aws划分更细致，阿里云已淘汰</td></tr></tbody></table><h2 id="分层测试框架"><a href="#分层测试框架" class="headerlink" title="分层测试框架"></a>分层测试框架</h2><p>分布式块存储性能测试考量需要覆盖以下的层次:</p><ol><li>系统网络性能、物理磁盘性能测试</li><li>存储核心系统读写性能测试，stress_tool、data_consistency_tool</li><li>宿主机上云盘性能、以及虚拟机上的云盘性能，PTS测试模型，fio</li><li>设备上文件系统性能测试，filebench，iozone等等</li><li>实际应用负载测试，sysbench OLTP、分布式数据分析框架IO负载仿真</li><li>用户常用操作的易用性</li></ol><p>块存储性能测试需要从两个视角看：</p><ul><li>用户维度：针对系统中单一卷实例可以获得稳定且可预期的性能，更多关注上述3 ~ 6的测试层次，本文主要讲解第3个层次的测试设计</li><li>集群维度：针对集群可服务能力的性能评估，保障系统整体稳定可控，更多关注上述1 ~ 2的测试层次</li></ul><h2 id="PTS测试模型"><a href="#PTS测试模型" class="headerlink" title="PTS测试模型"></a>PTS测试模型</h2><p><strong>PTS：</strong> Solid State Storage Performance Test Specification<br>SNIA固态存储性能测试标准，相关文档参见 <a href="https://www.snia.org/sites/default/files/technical_work/PTS/SSS_PTS_2.0.1.pdf" target="_blank" rel="noopener">SSS_PTS_2.0.1.pdf</a></p><p>本文测试设计主要参考上述文档，并针对云环境做了相应适配</p><h3 id="测试步骤"><a href="#测试步骤" class="headerlink" title="测试步骤"></a>测试步骤</h3><p>根据 PTS 规范，SSD 性能测试需要经过以下四个步骤：</p><ol><li>净化（purge）：通过擦除数据，将 SSD 置于接近 FOB 状态。</li><li>事先准备工作负载（WIPC）：写入规定的数据到整个 SSD，帮助其达到稳态。</li><li>正式测试之前的准备工作（WDPC）：循环运行测试，直到 SSD 进入稳态。</li><li>测试：当 SSD 进入稳态时开始测试。</li></ol><p>备注:</p><p><em>FOB:</em> Fresh of Box，新鲜出盒，即硬盘刚买来的状态</p><p><em>稳态:</em> 性能波动范围小于预先设定的阈值</p><h3 id="测试项"><a href="#测试项" class="headerlink" title="测试项"></a>测试项</h3><h4 id="IOPS测试"><a href="#IOPS测试" class="headerlink" title="IOPS测试"></a>IOPS测试</h4><p>测试在不同block size与不同的read/write 比的混合下随机IO的性能</p><p>block size：100/0, 95/5, 65/35, 50/50, 35/65, 5/95, 0/100 </p><p>read/write：1024KiB, 128KiB, 64KiB, 32KiB, 16KiB, 8KiB, 4KiB, 0.5KiB </p><p>磁盘IO的范围：100% volume size</p><p>（1）purge</p><p>（2）WIPC：128k顺序写2倍的磁盘空间</p><p>（3）WDPC：上述工作负载（bs，r/w） loop运行</p><p>（4）稳态判定：取相邻4轮的4kb 随机 0/100的iops，相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口</p><p>测试数据，取稳态窗口的均值</p><h4 id="Throughput测试"><a href="#Throughput测试" class="headerlink" title="Throughput测试"></a>Throughput测试</h4><p>测试在稳态的128k与1m的顺序读与顺序写的吞吐</p><p>磁盘IO的范围：100% volume size</p><p>（1）purge</p><p>（2）WIPC：128k顺序写或1M的顺序写2倍的磁盘空间</p><p>（3）WDPC：bs(128k,1M)和rw(100/0, 0/100) 顺序IO，loop，记录吞吐量</p><p>（4）稳态判定：取相邻4轮的吞吐，相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口</p><p>测试数据，取稳态窗口的均值</p><h4 id="延迟测试"><a href="#延迟测试" class="headerlink" title="延迟测试"></a>延迟测试</h4><p>测试在3种block sizes（0.5k，4k和8k），与三种读/写 比（100/0，65/35，0/100）混合下IO响应时间</p><p>磁盘IO的范围：100% volume size</p><p>（1）purge</p><p>（2）WIPC：128k顺序写2倍的磁盘空间</p><p>（3）WDPC：bs(0.5k, 4k, 8k)和rw(100/0,  65/35, 0/100) 随机IO，loop，记录最大延迟与平均延迟</p><p>（4）稳态判定：取相邻4轮的平均延迟（0/100，4k），相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口</p><p>测试数据，取稳态窗口的均值</p><h4 id="稳定性测试"><a href="#稳定性测试" class="headerlink" title="稳定性测试"></a>稳定性测试</h4><p>测试SSD性能是随着时间以及写入量的增加是如何变化的（1min的检测穿插着30分钟的WAST测试）</p><p>（1）purge</p><p>（2）4k的随机写（100%），持续写入达到4倍的磁盘大小或者达到24h或者达到5轮的稳态（满足其一即可）</p><p>（3）iostat统计磁盘读写性能数据，取fio延迟波动方差的数据</p><h2 id="测试工具"><a href="#测试工具" class="headerlink" title="测试工具"></a>测试工具</h2><p>代码路径: <a href="https://github.com/ksk0014/block-storage-benchamrk" target="_blank" rel="noopener">https://github.com/ksk0014/block-storage-benchamrk</a></p><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p>测试结果保存在文件中，格式如下图:</p><p><img src="/kskBlog/2018/05/04/块存储性能测试/perf_tool_result.jpeg" alt="性能测试结果"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;业务需求&quot;&gt;&lt;a href=&quot;#业务需求&quot; class=&quot;headerlink&quot; title=&quot;业务需求&quot;&gt;&lt;/a&gt;业务需求&lt;/h2&gt;&lt;p&gt;块存储服务推出后，需要针对各种产品宣称性能做基准性能评估。存储领域中性能评估指标主要分为三类IOPS、throughput、
      
    
    </summary>
    
      <category term="测试设计" scheme="https://ksk0014.github.io/kskBlog/categories/%E6%B5%8B%E8%AF%95%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Testing Phase" scheme="https://ksk0014.github.io/kskBlog/tags/Testing-Phase/"/>
    
  </entry>
  
</feed>
