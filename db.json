{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/google62c2c8a55340afa3.html","hash":"f983b73eadff0e8bea430bf7f6ec903cd6273a17","modified":1525940393000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1525940394000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1525940394000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1525940394000},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1525940394000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1525940394000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1525940394000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1525940394000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1525940394000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1525940394000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1525940394000},{"_id":"themes/next/README.en.md","hash":"32d6cdfec1447f54aae1d7f1365ce6733dfcec8f","modified":1525940394000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1525940394000},{"_id":"themes/next/bower.json","hash":"7d7938f9da896fe710aa0e9120140e528bf058df","modified":1525940394000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1525940394000},{"_id":"themes/next/_config.yml","hash":"fdbd079e2f05c674e262eaf5475639caeb263b9f","modified":1525940394000},{"_id":"themes/next/package.json","hash":"193dad6f59a588908fac082cc46fe067dac1b84d","modified":1525940394000},{"_id":"source/categories/index.md","hash":"00c9bdda4f0a0c2d6ce3452aa1aaaf22fc126f96","modified":1525940393000},{"_id":"source/_posts/QJM方案理解.md","hash":"0ec4a70f76693cc5510a58cdb24314a5e064584b","modified":1525965505000},{"_id":"source/_posts/linux-vim开发环境配置.md","hash":"c7c01225012221de50fa984189c7edb1bf13e9a0","modified":1526311468000},{"_id":"source/_posts/paxos算法理解.md","hash":"9df7e0664c345472fde9ce0d2a47dbefa2e5b704","modified":1526353391000},{"_id":"source/_posts/分布式存储质量保障体系.md","hash":"31accde771a8f0d65864dffe5bbf583e7aba71de","modified":1525940393000},{"_id":"source/_posts/分布式系统部署工具.md","hash":"d5efb00912b7fdfd49cc2dfc0aa14c0054bad49e","modified":1525940393000},{"_id":"source/_posts/块存储性能测试.md","hash":"136dd2f086db607cc78dcac642f2cf7290f90185","modified":1525940393000},{"_id":"source/_posts/离职工作总结.md","hash":"6416820c1747e54270b12b6de4ec81c1bd27cfae","modified":1525940393000},{"_id":"source/_drafts/HA方案概述.md","hash":"7c7f6330887c2b90c5a66f0e61bb0b6314e7403c","modified":1525941532000},{"_id":"source/_drafts/QJM方案改进.md","hash":"c5b5948e4ae38d742f5c803401bf223307ec389d","modified":1525941475000},{"_id":"source/_drafts/phxpaxos代码阅读笔记（一）.md","hash":"4ba6b0a1ed0e911752bc78ca350640cd05cac40e","modified":1526307270000},{"_id":"source/_drafts/braft代码阅读笔记（一）.md","hash":"cf1862ea53ec90e8104defc3b361dee51a817304","modified":1526307280000},{"_id":"source/_drafts/raft算法理解.md","hash":"c583dc52df1692046ff4eb91ed8df1ce9a4f6794","modified":1525941444000},{"_id":"source/_drafts/深入浅出SSD阅读笔记（一）.md","hash":"21f0e4f99458bbf9d40166d5f193db476ea6adfa","modified":1526307512000},{"_id":"source/tags/index.md","hash":"14f81fe683f20fa309049c0ca5d706fccb1796cf","modified":1525940393000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1525940394000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1525940394000},{"_id":"themes/next/layout/_layout.swig","hash":"06b1eab2e00273e0b94bd32dc682bd92c1e0a747","modified":1525940394000},{"_id":"themes/next/layout/archive.swig","hash":"383f64deab105724fd5512371963bd9e9aafbffd","modified":1525940394000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1525940394000},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1525940394000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1525940394000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1525940394000},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1525940394000},{"_id":"themes/next/layout/page.swig","hash":"37c874cd720acf0eda8d26e063278f2b6ae8d3a6","modified":1525940394000},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1525940394000},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1525940394000},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1525940394000},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1525940394000},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1525940394000},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1525940394000},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1525940394000},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1525940394000},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1525940394000},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1525940394000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1525940394000},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1525940394000},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1525940394000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1525940394000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1525940394000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1525940394000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525940394000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1525940394000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1525940394000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1525940394000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1525940394000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1525940394000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1525940394000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1525940394000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1525940394000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1525940394000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1525940394000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"53d4f83b2b7fb4387dfc9fe81519abd56fbce4ae","modified":1525940394000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1525940394000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1525940394000},{"_id":"themes/next/layout/_macro/post.swig","hash":"911363776867d9523a3e322cdf591d49cd166403","modified":1525940394000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1525940394000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"faa7886ccf986890cd776f4e9d70cb89fe9fda5f","modified":1525940394000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1525940394000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"5d5f70deb6074cb4dd0438463e14ccf89213c282","modified":1525940394000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1525940394000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"ce7094ee05878161e7568a6dfae5b56ff3fbd6e1","modified":1525940394000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1525940394000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1525940394000},{"_id":"themes/next/layout/_partials/head.swig","hash":"1f14d3f494b2dbbcee802fd6f6d1abd5b7e2304c","modified":1525940394000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1525940394000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1525940394000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1525940394000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1525940394000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1525940394000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1525940394000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1525940394000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1525940394000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1525940394000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1525940394000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1525940394000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1525940394000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1525940394000},{"_id":"themes/next/source/images/avatar.jpg","hash":"60b8b145ac9578eedd36806d38489842538afb5c","modified":1525940394000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1525940394000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1525940394000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1525940394000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1525940394000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1525940394000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1525940394000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1525940394000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1525940394000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1525940394000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1525940394000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1525940394000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1525940394000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525940394000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525940394000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525940394000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525940394000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525940394000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525940394000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1525940394000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1525940394000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1525940394000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1525940394000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1525940394000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1525940394000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1525940394000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1525940394000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1525940394000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1525940394000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1525940394000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1525940394000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1525940394000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1525940394000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1525940394000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1525940394000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1525940394000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1525940394000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1525940394000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1525940394000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1525940394000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1525940394000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1525940394000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1525940394000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1525940394000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1525940394000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1525940394000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"ee63aa2e49507b884a2d56778479cf01c723d751","modified":1525940394000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1525940394000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1525940394000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1525940394000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1525940394000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1525940394000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1525940394000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1525940394000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"49b5210fa62d6cbc6a98f57d89d5067a06ab3561","modified":1525940394000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1525940394000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"cfee25d790e4f9b7d57f0dc7e2ea9c1649f08f11","modified":1525940394000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1525940394000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1525940394000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1525940394000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d477196c5699c8261b08e993a77ef67054d86166","modified":1525940394000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"eaedfaf06dae94ba77a8f4893e2e434bf8859bac","modified":1525940394000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1525940394000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1525940394000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1525940394000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1525940394000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1525940394000},{"_id":"themes/next/source/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1525940394000},{"_id":"themes/next/source/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1525940394000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1525940394000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1525940394000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1525940394000},{"_id":"themes/next/source/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1525940394000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1525940394000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1525940394000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1525940394000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1525940394000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1525940394000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1525940394000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1525940394000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1525940394000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1525940394000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1525940394000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1525940394000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1525940394000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1525940394000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1525940394000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1525940394000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1525940394000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1525940394000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1525940394000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1525940394000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1525940394000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1525940394000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1525940394000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1525940394000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1525940394000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1525940394000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1525940394000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1525940394000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1525940394000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1525940394000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1525940394000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1525940394000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1525940394000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1525940394000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1525940394000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1525940394000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1525940394000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1525940394000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1525940394000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1525940394000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1525940394000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1525940394000},{"_id":"source/_posts/paxos算法理解/WechatIMG3614.jpeg","hash":"f576563c3a8a62ffd0a738f565c032810383e3fa","modified":1526353249000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1525940394000},{"_id":"source/_posts/块存储性能测试/perf_tool_result.jpeg","hash":"065c02a80a304509b5dd9c146b4e709c37f53096","modified":1525940393000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1525940394000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1525940394000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d026c8489f66ab6c12ad04bd37f1d5b6f2f3f0d1","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1525940394000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"2915df7152ea095a6290ef69157fd67669e0e793","modified":1525940394000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"86b6fd7f1b1be3ae98f8af6b23a6b1299c670ce9","modified":1525940394000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1525940394000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1525940394000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1525940394000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"bc8c388553bbcf95897459a466ba35bffd5ec5f0","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1525940394000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1525940394000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1525940394000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1525940394000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1525940394000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1525940394000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1525940394000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1525940394000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1525940394000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1525940394000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1525940394000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1525940394000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1525940394000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1525940394000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1525940394000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ee554b1031ef0070a5916477939021800e3c9d27","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"51eca243220cf57133a4becae9b78514bcfdc723","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"65a64d5662637b66e2f039a5f58217afe7a6e800","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"57d2c8a060f5e4e1a0aef9aae11a0016cf7ac5ba","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"45df0cf4c97b47e05573bcd41028ee50f3fdf432","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1525940394000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1525940394000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1525940394000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1525940394000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1525940394000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1525940394000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1525940394000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1525940394000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1525940394000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1525940394000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1525940394000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1525940394000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1525940394000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1525940394000},{"_id":"public/google62c2c8a55340afa3.html","hash":"dbbd8268672184bec05d97875794ef380b1d5774","modified":1526353589316},{"_id":"public/categories/index.html","hash":"40fd91723bc1af43af792e4c787b42fb2c14829e","modified":1526353589316},{"_id":"public/tags/index.html","hash":"e6dd580f08a579fffad7a901c3f0a3308e51d7f9","modified":1526353589316},{"_id":"public/2018/05/15/paxos算法理解/index.html","hash":"0f96811e8ba2950c53fce129b702010208ee58ea","modified":1526353589316},{"_id":"public/2018/05/14/linux-vim开发环境配置/index.html","hash":"59fc9491401067bb54d0e911dbcee0a77bfaa6d6","modified":1526353589316},{"_id":"public/2018/05/10/QJM方案理解/index.html","hash":"68f79fe531300edbf8d8a6706c04e235ff42e466","modified":1526353589317},{"_id":"public/2018/05/07/离职工作总结/index.html","hash":"9e1a0f801ec5044665283a78c8eeb210f163354d","modified":1526353589317},{"_id":"public/2018/05/05/分布式系统部署工具/index.html","hash":"bfd259daa25927d099973814547f8189416b54c3","modified":1526353589317},{"_id":"public/2018/05/04/分布式存储质量保障体系/index.html","hash":"680a7f699a3eb18134d275f6538ec45acddd507a","modified":1526353589317},{"_id":"public/2018/05/04/块存储性能测试/index.html","hash":"9d8892249432e00cc9c17d8674b29b2cda5342f5","modified":1526353589317},{"_id":"public/categories/分布式系统设计/index.html","hash":"b7ba088d4d84dc4f1e3dddc37d47fae6bc18d2e2","modified":1526353589317},{"_id":"public/categories/基础环境/index.html","hash":"acd7cfcdaa93ba66a67f5fb72e6cce6a798381d0","modified":1526353589317},{"_id":"public/categories/测试设计/index.html","hash":"9617923d8b98287b60b2f2edda5cf14d3c4a6f14","modified":1526353589317},{"_id":"public/categories/部署工具/index.html","hash":"b5f4f58f0832aa8e87dc6ea2083490e76bf268e7","modified":1526353589317},{"_id":"public/categories/随笔/index.html","hash":"893a3289afea8b087073d1879a1a25c64b0fa6bb","modified":1526353589317},{"_id":"public/archives/index.html","hash":"9f61da80a9c14593cfd6ec7f4689c3ad1e070802","modified":1526353589317},{"_id":"public/archives/2018/index.html","hash":"717c481e2a63facedca8f380fdb698bd716a14b9","modified":1526353589317},{"_id":"public/archives/2018/05/index.html","hash":"d050105e09054b818cacfd43ca58f4c7e262e250","modified":1526353589317},{"_id":"public/index.html","hash":"9b23e860890b56ac6bcec67a52871f20f9defd8f","modified":1526353589318},{"_id":"public/tags/QJM/index.html","hash":"b06e193eaf01b893135fc171bfdc1cd0963866dd","modified":1526353589318},{"_id":"public/tags/Tools/index.html","hash":"daca0ce69880ba9946ee3e394167e64cae1cfef8","modified":1526353589318},{"_id":"public/tags/paxos/index.html","hash":"9d0dd3a31439ede2d8bd0bbd948ced3873eb6eb1","modified":1526353589318},{"_id":"public/tags/Testing-Framework/index.html","hash":"ca4cbf65921c24a58ab97afbe51223ef3930cfa2","modified":1526353589318},{"_id":"public/tags/Testing-Phase/index.html","hash":"1dcaf1681a7ffc736f99f94c3e2d17e97242784e","modified":1526353589318},{"_id":"public/tags/life/index.html","hash":"001f95d99b08ca2b7ff8a424d63d2d196ac7dd57","modified":1526353589318},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1526353589324},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1526353589324},{"_id":"public/images/avatar.jpg","hash":"60b8b145ac9578eedd36806d38489842538afb5c","modified":1526353589324},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1526353589324},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1526353589324},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1526353589324},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1526353589324},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1526353589324},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1526353589324},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1526353589324},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526353589324},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1526353589324},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526353589325},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1526353589325},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1526353589325},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1526353589325},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1526353589325},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1526353589325},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1526353589325},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1526353589325},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1526353589325},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1526353589325},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1526353589325},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1526353589325},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1526353589325},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1526353589325},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1526353589325},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1526353589325},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1526353589325},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1526353589872},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1526353589878},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1526353589923},{"_id":"public/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1526353589923},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1526353589923},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1526353589923},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1526353589923},{"_id":"public/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1526353589923},{"_id":"public/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1526353589923},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1526353589923},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1526353589923},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1526353589923},{"_id":"public/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1526353589924},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1526353589924},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1526353589924},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1526353589924},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1526353589924},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1526353589924},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1526353589924},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1526353589924},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1526353589924},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1526353589924},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1526353589924},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1526353589924},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1526353589924},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1526353589924},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1526353589924},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1526353589924},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1526353589925},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1526353589925},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1526353589925},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1526353589925},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1526353589925},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1526353589925},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1526353589925},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1526353589925},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1526353589925},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1526353589925},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1526353589925},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1526353589925},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1526353589925},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1526353589925},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1526353589925},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1526353589925},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1526353589926},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1526353589926},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1526353589926},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1526353589926},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1526353589926},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1526353589926},{"_id":"public/css/main.css","hash":"dad7c28a208b16541d9314833f66e9feccd4ab34","modified":1526353589926},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1526353589926},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1526353589926},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1526353589926},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1526353589926},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1526353589926},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1526353589926},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1526353589926},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1526353589926},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1526353589927},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1526353589927},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1526353589927},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1526353589927},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1526353589927},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1526353589927},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1526353589927},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1526353589927},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1526353589927},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1526353589927},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1526353589927},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1526353589928},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1526353589928},{"_id":"public/2018/05/15/paxos算法理解/WechatIMG3614.jpeg","hash":"f576563c3a8a62ffd0a738f565c032810383e3fa","modified":1526353589931},{"_id":"public/2018/05/04/块存储性能测试/perf_tool_result.jpeg","hash":"065c02a80a304509b5dd9c146b4e709c37f53096","modified":1526353589935},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1526353589942}],"Category":[{"name":"分布式系统设计","_id":"cjh73ilr200041lca0zkw2ev2"},{"name":"基础环境","_id":"cjh73ilr900091lcas8pqk9q4"},{"name":"测试设计","_id":"cjh73ilrj000k1lcaf9dedwct"},{"name":"部署工具","_id":"cjh73ilrn000r1lcal37f7d86"},{"name":"随笔","_id":"cjh73ilrq000z1lcaxvhdtwoz"}],"Data":[],"Page":[{"_content":"google-site-verification: google62c2c8a55340afa3.html","source":"google62c2c8a55340afa3.html","raw":"google-site-verification: google62c2c8a55340afa3.html","date":"2018-05-10T08:19:53.000Z","updated":"2018-05-10T08:19:53.000Z","path":"google62c2c8a55340afa3.html","title":"","comments":1,"layout":"page","_id":"cjh73ilq200001lcazx1zqf7y","content":"google-site-verification: google62c2c8a55340afa3.html","site":{"data":{}},"excerpt":"","more":"google-site-verification: google62c2c8a55340afa3.html"},{"title":"categories","date":"2018-05-04T14:25:05.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-05-04 22:25:05\ntype: \"categories\"\n---\n","updated":"2018-05-10T08:19:53.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjh73ilqv00011lca32ee7zpw","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-05-04T14:22:03.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-05-04 22:22:03\ntype: \"tags\"\n---\n","updated":"2018-05-10T08:19:53.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjh73ilxs00171lcaiu3y9h80","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"QJM方案理解","type":"categories","copyright":true,"date":"2018-05-10T15:18:25.000Z","_content":"\n\n# 背景 #\nQJM是QuorumJournalManager的简写，是Hadoop V2中的namenode的默认HA方案。qjm方案简单，只有两个组件：journal node和libqjm，qjm方案并不负责选主，选主交由外部实现，例如基于zookeeper实现。libqjm负责journal数据的读写，其中包括journal在异常情况下的一致性恢复；journalnode负责log数据的存储。\n\n# Writing-logs #\n## QJM主管理流程 ##\n1. fencing prior writers：writer必须确保没有之前的writers依然在写edit logs。隔离流程见下述分析\n2. recovering in-progress logs：在上一个writer写入log失败，JNs的log长度是存在不同的可能性\n3. start a new log segment：log写入的常规流程\n4. write edits：对于需要批量写入的edits，writer发送edits到所有的JNs，一旦收到大多数JN的成功响应（N/2N+1），则认为写成功。当少数JN写入失败或者慢响应而使得写入edits pending超过配置阈值，则JN会被标记为outOfSync，当前的log segment将不再被使用。只要大多数节点存活，则不会有问题。dead node在下次edit log写入时会recover。\n5. finalize log segment：QJM通过RPC告知所有的JNs关闭log segment。只要收到了大多数响应，则segment被关闭，开启下一个log segment（步骤3）\n\n## Fencing writers ##\n引入epoch做到隔离功能，epoch需要具备以下特性：\n\n* writer成为主时 或 对edit logs变更时，需要赋予epoch\n* epoch全局单调递增\n* QJM通过newEpoch(N)告知所有JNs新的epoch，只有收到大多数JNs成功的响应才开始以此epoch工作\n* 任何变更edit logs的RPC（例如logEdits(), startLogSegment()），必须携带请求者的epoch\n* JN在响应任何RPC（除newEpoch外）前，必须检查自身记录的epoch（lastPromised变量，持久化到本地）和请求的epoch。如果请求epoch小于自身记录的epoch，则拒绝请求；如果大于自身记录的epoch，则会更新自身记录。\n\n## Writer epochs ##\nJN除了管理lastPromisedEpoch，还管理了一个持久化变量lastWriterEpoch，在开始写new log segment会更新，这样可以跟踪上一次writer的epoch。此变量在恢复流程中很重要。\n\n## Generating epoch ##\n从Paxos中借鉴生成epoch方法：\n1. QJM发送getJournalState()到所有JNs，每个JN以lastpromisedEpoch值响应\n2. 收到大多数JN响应后，QJM从中选取看到的最大值，然后自增1作为proposedEpoch\n3. QJM发送newEpoch(proposedEpoch)到所有JNs，每个JN自动比较proposal和自身的lastpromisedEpoch，如果proposal大，则更新lastpromisedEpoch并响应成功，如果proposal小，则响应失败\n4. 收到大多数成功响应后，设置propose epoch为当前writer的epoch，否则抛出一个IOException终止切成active\n\n## Synchronizing logs ##\n1. 定义最新的log segment的事务id\n2. 定义上一个被成功提交到多数JN的事务ID，等价于定义哪一个JN包含最新的被提交事务的log\n3. 确保多数JN通过从包含最新log segment的JN同步log segment\n4. 指导这些JN标记log segment关闭\n\n## Invariants ##\n定理1：一旦一个log segment被关闭，将不会再被开启\n定理2：如果一个log segment在事务id N开始，那必然有多数节点包含log segment在事务N-1结束\n定理3：如果在任何节点有一个log segment在事务id N结束，那在多数节点必然有一个log segment在事务id结束\n\n## Recovery algorithm ##\n在一个新writer启动，上一个writer很可能遗留一些log segments处于in-progress状态。在新writer开始写之前，必须recover in-progress状态的segment，然后关闭它。这个流程的需求如下：\n\n* 被关闭的log必须包含所有之前已经被提交的事务\n* log必须在多数节点中被关闭\n* 所有的loggers必须在相同的长度及内容处关闭。\n\n这个问题是通过Paxos算法解决：\n这个同传统Paxos不同的地方在于，我们复用了在newEpoch步骤中产生的唯一的epoch，而不是为了recover流程新生成一个。这个同multi-Paxos算法类似：\n\n1. 定义recover哪个segment：需要恢复的 Edit Log 只可能是各个 JournalNode 上的最后一个 Edit Log Segment，如前所述，JN 在处理完 newEpoch RPC 请求之后，会向 QJM 返回它自己的本地磁盘上最新的一个 EditLog Segment 的起始事务 id，这个起始事务 id 实际上也作为这个 EditLog Segment 的 id。QJM会在所有这些 id 之中选择一个最大的 id 作为要进行数据恢复的 EditLog Segment 的 id。\n\n2. prepareRecovery RPC ：接下来向 JournalNode 集群发送 prepareRecovery RPC 请求，请求的参数就是选出的 EditLog Segment 的 id。JournalNode 收到请求后返回本地磁盘上这个 Segment 的起始事务 id、结束事务 id 和状态 (in-progress 或 finalized)。  \n这一步对应于 Paxos 算法的 Phase 1a 和 Phase 1b 两步。Paxos 算法的 Phase1 是 prepare 阶段，这也与方法名 prepareRecovery 相对应。并且这里以前面产生的新的 Epoch 作为 Paxos 算法中的提案编号 (proposal number)。只要大多数的 JournalNode 的 prepareRecovery RPC 调用成功返回，QJM 就认为成功。  \n选择进行同步的基准数据源，向 JournalNode 集群发送 acceptRecovery RPC 请求 QJM 根据 prepareRecovery 的返回结果，选择一个 JournalNode 上的 EditLog Segment 作为同步的基准数据源。选择基准数据源的原则大致是：在 in-progress 状态和 finalized 状态的 Segment 之间优先选择 finalized 状态的 Segment。如果都是 in-progress 状态的话，那么优先选择 Epoch 比较高的 Segment(也就是优先选择更新的)，如果 Epoch 也一样，那么优先选择包含的事务数更多的 Segment。\n\n3. acceptRecovery RPC：向 JournalNode 集群发送 acceptRecovery RPC 请求，将选定的基准数据源作为参数。JournalNode 接收到 acceptRecovery RPC 请求之后，从基准数据源 JournalNode 的 JournalNodeHttpServer 上下载 EditLog Segment，将本地的 EditLog Segment 替换为下载的 EditLog Segment。  \n这一步对应于 Paxos 算法的 Phase 2a 和 Phase 2b 两步。Paxos 算法的 Phase2 是 accept 阶段，这也与方法名 acceptRecovery 相对应。只要大多数 JournalNode 的 acceptRecovery RPC 调用成功返回，QJM就认为成功。\n\n4. finalizeLogSegment RPC：上一步执行完成之后，QJM 确认大多数 JournalNode 上的 EditLog Segment 已经从基准数据源进行了同步。接下来，QJM 向 JournalNode 集群发送 finalizeLogSegment RPC 请求，JournalNode 接收到请求之后，将对应的 EditLog Segment 从 in-progress 状态转换为 finalized 状态\n只要大多数 JournalNode 的 finalizeLogSegment RPC 调用成功返回，QJM 就认为成功。此时可以保证 JournalNode 集群的大多数节点上的 EditLog 已经处于一致的状态，这样 QJM才能安全地从 JournalNode 集群上补齐落后的 EditLog 数据。\n\n# reading #\n只从每个节点读处于关闭状态的segment，通过getEditLogManifest() RPC 从所有的节点得到数据merge到RedundantEditLogInputStreams，从节点可以从任何JN的关闭状态的segment中选读，这种redundant 输入流可以自动容错。\n","source":"_posts/QJM方案理解.md","raw":"---\ntitle: QJM方案理解\ntags:\n  - QJM\ntype: categories\ncategories:\n  - 分布式系统设计\ncopyright: true\ndate: 2018-05-10 23:18:25\n---\n\n\n# 背景 #\nQJM是QuorumJournalManager的简写，是Hadoop V2中的namenode的默认HA方案。qjm方案简单，只有两个组件：journal node和libqjm，qjm方案并不负责选主，选主交由外部实现，例如基于zookeeper实现。libqjm负责journal数据的读写，其中包括journal在异常情况下的一致性恢复；journalnode负责log数据的存储。\n\n# Writing-logs #\n## QJM主管理流程 ##\n1. fencing prior writers：writer必须确保没有之前的writers依然在写edit logs。隔离流程见下述分析\n2. recovering in-progress logs：在上一个writer写入log失败，JNs的log长度是存在不同的可能性\n3. start a new log segment：log写入的常规流程\n4. write edits：对于需要批量写入的edits，writer发送edits到所有的JNs，一旦收到大多数JN的成功响应（N/2N+1），则认为写成功。当少数JN写入失败或者慢响应而使得写入edits pending超过配置阈值，则JN会被标记为outOfSync，当前的log segment将不再被使用。只要大多数节点存活，则不会有问题。dead node在下次edit log写入时会recover。\n5. finalize log segment：QJM通过RPC告知所有的JNs关闭log segment。只要收到了大多数响应，则segment被关闭，开启下一个log segment（步骤3）\n\n## Fencing writers ##\n引入epoch做到隔离功能，epoch需要具备以下特性：\n\n* writer成为主时 或 对edit logs变更时，需要赋予epoch\n* epoch全局单调递增\n* QJM通过newEpoch(N)告知所有JNs新的epoch，只有收到大多数JNs成功的响应才开始以此epoch工作\n* 任何变更edit logs的RPC（例如logEdits(), startLogSegment()），必须携带请求者的epoch\n* JN在响应任何RPC（除newEpoch外）前，必须检查自身记录的epoch（lastPromised变量，持久化到本地）和请求的epoch。如果请求epoch小于自身记录的epoch，则拒绝请求；如果大于自身记录的epoch，则会更新自身记录。\n\n## Writer epochs ##\nJN除了管理lastPromisedEpoch，还管理了一个持久化变量lastWriterEpoch，在开始写new log segment会更新，这样可以跟踪上一次writer的epoch。此变量在恢复流程中很重要。\n\n## Generating epoch ##\n从Paxos中借鉴生成epoch方法：\n1. QJM发送getJournalState()到所有JNs，每个JN以lastpromisedEpoch值响应\n2. 收到大多数JN响应后，QJM从中选取看到的最大值，然后自增1作为proposedEpoch\n3. QJM发送newEpoch(proposedEpoch)到所有JNs，每个JN自动比较proposal和自身的lastpromisedEpoch，如果proposal大，则更新lastpromisedEpoch并响应成功，如果proposal小，则响应失败\n4. 收到大多数成功响应后，设置propose epoch为当前writer的epoch，否则抛出一个IOException终止切成active\n\n## Synchronizing logs ##\n1. 定义最新的log segment的事务id\n2. 定义上一个被成功提交到多数JN的事务ID，等价于定义哪一个JN包含最新的被提交事务的log\n3. 确保多数JN通过从包含最新log segment的JN同步log segment\n4. 指导这些JN标记log segment关闭\n\n## Invariants ##\n定理1：一旦一个log segment被关闭，将不会再被开启\n定理2：如果一个log segment在事务id N开始，那必然有多数节点包含log segment在事务N-1结束\n定理3：如果在任何节点有一个log segment在事务id N结束，那在多数节点必然有一个log segment在事务id结束\n\n## Recovery algorithm ##\n在一个新writer启动，上一个writer很可能遗留一些log segments处于in-progress状态。在新writer开始写之前，必须recover in-progress状态的segment，然后关闭它。这个流程的需求如下：\n\n* 被关闭的log必须包含所有之前已经被提交的事务\n* log必须在多数节点中被关闭\n* 所有的loggers必须在相同的长度及内容处关闭。\n\n这个问题是通过Paxos算法解决：\n这个同传统Paxos不同的地方在于，我们复用了在newEpoch步骤中产生的唯一的epoch，而不是为了recover流程新生成一个。这个同multi-Paxos算法类似：\n\n1. 定义recover哪个segment：需要恢复的 Edit Log 只可能是各个 JournalNode 上的最后一个 Edit Log Segment，如前所述，JN 在处理完 newEpoch RPC 请求之后，会向 QJM 返回它自己的本地磁盘上最新的一个 EditLog Segment 的起始事务 id，这个起始事务 id 实际上也作为这个 EditLog Segment 的 id。QJM会在所有这些 id 之中选择一个最大的 id 作为要进行数据恢复的 EditLog Segment 的 id。\n\n2. prepareRecovery RPC ：接下来向 JournalNode 集群发送 prepareRecovery RPC 请求，请求的参数就是选出的 EditLog Segment 的 id。JournalNode 收到请求后返回本地磁盘上这个 Segment 的起始事务 id、结束事务 id 和状态 (in-progress 或 finalized)。  \n这一步对应于 Paxos 算法的 Phase 1a 和 Phase 1b 两步。Paxos 算法的 Phase1 是 prepare 阶段，这也与方法名 prepareRecovery 相对应。并且这里以前面产生的新的 Epoch 作为 Paxos 算法中的提案编号 (proposal number)。只要大多数的 JournalNode 的 prepareRecovery RPC 调用成功返回，QJM 就认为成功。  \n选择进行同步的基准数据源，向 JournalNode 集群发送 acceptRecovery RPC 请求 QJM 根据 prepareRecovery 的返回结果，选择一个 JournalNode 上的 EditLog Segment 作为同步的基准数据源。选择基准数据源的原则大致是：在 in-progress 状态和 finalized 状态的 Segment 之间优先选择 finalized 状态的 Segment。如果都是 in-progress 状态的话，那么优先选择 Epoch 比较高的 Segment(也就是优先选择更新的)，如果 Epoch 也一样，那么优先选择包含的事务数更多的 Segment。\n\n3. acceptRecovery RPC：向 JournalNode 集群发送 acceptRecovery RPC 请求，将选定的基准数据源作为参数。JournalNode 接收到 acceptRecovery RPC 请求之后，从基准数据源 JournalNode 的 JournalNodeHttpServer 上下载 EditLog Segment，将本地的 EditLog Segment 替换为下载的 EditLog Segment。  \n这一步对应于 Paxos 算法的 Phase 2a 和 Phase 2b 两步。Paxos 算法的 Phase2 是 accept 阶段，这也与方法名 acceptRecovery 相对应。只要大多数 JournalNode 的 acceptRecovery RPC 调用成功返回，QJM就认为成功。\n\n4. finalizeLogSegment RPC：上一步执行完成之后，QJM 确认大多数 JournalNode 上的 EditLog Segment 已经从基准数据源进行了同步。接下来，QJM 向 JournalNode 集群发送 finalizeLogSegment RPC 请求，JournalNode 接收到请求之后，将对应的 EditLog Segment 从 in-progress 状态转换为 finalized 状态\n只要大多数 JournalNode 的 finalizeLogSegment RPC 调用成功返回，QJM 就认为成功。此时可以保证 JournalNode 集群的大多数节点上的 EditLog 已经处于一致的状态，这样 QJM才能安全地从 JournalNode 集群上补齐落后的 EditLog 数据。\n\n# reading #\n只从每个节点读处于关闭状态的segment，通过getEditLogManifest() RPC 从所有的节点得到数据merge到RedundantEditLogInputStreams，从节点可以从任何JN的关闭状态的segment中选读，这种redundant 输入流可以自动容错。\n","slug":"QJM方案理解","published":1,"updated":"2018-05-10T15:18:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh73ilqw00021lcaw3cq5a9i","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>QJM是QuorumJournalManager的简写，是Hadoop V2中的namenode的默认HA方案。qjm方案简单，只有两个组件：journal node和libqjm，qjm方案并不负责选主，选主交由外部实现，例如基于zookeeper实现。libqjm负责journal数据的读写，其中包括journal在异常情况下的一致性恢复；journalnode负责log数据的存储。</p>\n<h1 id=\"Writing-logs\"><a href=\"#Writing-logs\" class=\"headerlink\" title=\"Writing-logs\"></a>Writing-logs</h1><h2 id=\"QJM主管理流程\"><a href=\"#QJM主管理流程\" class=\"headerlink\" title=\"QJM主管理流程\"></a>QJM主管理流程</h2><ol>\n<li>fencing prior writers：writer必须确保没有之前的writers依然在写edit logs。隔离流程见下述分析</li>\n<li>recovering in-progress logs：在上一个writer写入log失败，JNs的log长度是存在不同的可能性</li>\n<li>start a new log segment：log写入的常规流程</li>\n<li>write edits：对于需要批量写入的edits，writer发送edits到所有的JNs，一旦收到大多数JN的成功响应（N/2N+1），则认为写成功。当少数JN写入失败或者慢响应而使得写入edits pending超过配置阈值，则JN会被标记为outOfSync，当前的log segment将不再被使用。只要大多数节点存活，则不会有问题。dead node在下次edit log写入时会recover。</li>\n<li>finalize log segment：QJM通过RPC告知所有的JNs关闭log segment。只要收到了大多数响应，则segment被关闭，开启下一个log segment（步骤3）</li>\n</ol>\n<h2 id=\"Fencing-writers\"><a href=\"#Fencing-writers\" class=\"headerlink\" title=\"Fencing writers\"></a>Fencing writers</h2><p>引入epoch做到隔离功能，epoch需要具备以下特性：</p>\n<ul>\n<li>writer成为主时 或 对edit logs变更时，需要赋予epoch</li>\n<li>epoch全局单调递增</li>\n<li>QJM通过newEpoch(N)告知所有JNs新的epoch，只有收到大多数JNs成功的响应才开始以此epoch工作</li>\n<li>任何变更edit logs的RPC（例如logEdits(), startLogSegment()），必须携带请求者的epoch</li>\n<li>JN在响应任何RPC（除newEpoch外）前，必须检查自身记录的epoch（lastPromised变量，持久化到本地）和请求的epoch。如果请求epoch小于自身记录的epoch，则拒绝请求；如果大于自身记录的epoch，则会更新自身记录。</li>\n</ul>\n<h2 id=\"Writer-epochs\"><a href=\"#Writer-epochs\" class=\"headerlink\" title=\"Writer epochs\"></a>Writer epochs</h2><p>JN除了管理lastPromisedEpoch，还管理了一个持久化变量lastWriterEpoch，在开始写new log segment会更新，这样可以跟踪上一次writer的epoch。此变量在恢复流程中很重要。</p>\n<h2 id=\"Generating-epoch\"><a href=\"#Generating-epoch\" class=\"headerlink\" title=\"Generating epoch\"></a>Generating epoch</h2><p>从Paxos中借鉴生成epoch方法：</p>\n<ol>\n<li>QJM发送getJournalState()到所有JNs，每个JN以lastpromisedEpoch值响应</li>\n<li>收到大多数JN响应后，QJM从中选取看到的最大值，然后自增1作为proposedEpoch</li>\n<li>QJM发送newEpoch(proposedEpoch)到所有JNs，每个JN自动比较proposal和自身的lastpromisedEpoch，如果proposal大，则更新lastpromisedEpoch并响应成功，如果proposal小，则响应失败</li>\n<li>收到大多数成功响应后，设置propose epoch为当前writer的epoch，否则抛出一个IOException终止切成active</li>\n</ol>\n<h2 id=\"Synchronizing-logs\"><a href=\"#Synchronizing-logs\" class=\"headerlink\" title=\"Synchronizing logs\"></a>Synchronizing logs</h2><ol>\n<li>定义最新的log segment的事务id</li>\n<li>定义上一个被成功提交到多数JN的事务ID，等价于定义哪一个JN包含最新的被提交事务的log</li>\n<li>确保多数JN通过从包含最新log segment的JN同步log segment</li>\n<li>指导这些JN标记log segment关闭</li>\n</ol>\n<h2 id=\"Invariants\"><a href=\"#Invariants\" class=\"headerlink\" title=\"Invariants\"></a>Invariants</h2><p>定理1：一旦一个log segment被关闭，将不会再被开启<br>定理2：如果一个log segment在事务id N开始，那必然有多数节点包含log segment在事务N-1结束<br>定理3：如果在任何节点有一个log segment在事务id N结束，那在多数节点必然有一个log segment在事务id结束</p>\n<h2 id=\"Recovery-algorithm\"><a href=\"#Recovery-algorithm\" class=\"headerlink\" title=\"Recovery algorithm\"></a>Recovery algorithm</h2><p>在一个新writer启动，上一个writer很可能遗留一些log segments处于in-progress状态。在新writer开始写之前，必须recover in-progress状态的segment，然后关闭它。这个流程的需求如下：</p>\n<ul>\n<li>被关闭的log必须包含所有之前已经被提交的事务</li>\n<li>log必须在多数节点中被关闭</li>\n<li>所有的loggers必须在相同的长度及内容处关闭。</li>\n</ul>\n<p>这个问题是通过Paxos算法解决：<br>这个同传统Paxos不同的地方在于，我们复用了在newEpoch步骤中产生的唯一的epoch，而不是为了recover流程新生成一个。这个同multi-Paxos算法类似：</p>\n<ol>\n<li><p>定义recover哪个segment：需要恢复的 Edit Log 只可能是各个 JournalNode 上的最后一个 Edit Log Segment，如前所述，JN 在处理完 newEpoch RPC 请求之后，会向 QJM 返回它自己的本地磁盘上最新的一个 EditLog Segment 的起始事务 id，这个起始事务 id 实际上也作为这个 EditLog Segment 的 id。QJM会在所有这些 id 之中选择一个最大的 id 作为要进行数据恢复的 EditLog Segment 的 id。</p>\n</li>\n<li><p>prepareRecovery RPC ：接下来向 JournalNode 集群发送 prepareRecovery RPC 请求，请求的参数就是选出的 EditLog Segment 的 id。JournalNode 收到请求后返回本地磁盘上这个 Segment 的起始事务 id、结束事务 id 和状态 (in-progress 或 finalized)。<br>这一步对应于 Paxos 算法的 Phase 1a 和 Phase 1b 两步。Paxos 算法的 Phase1 是 prepare 阶段，这也与方法名 prepareRecovery 相对应。并且这里以前面产生的新的 Epoch 作为 Paxos 算法中的提案编号 (proposal number)。只要大多数的 JournalNode 的 prepareRecovery RPC 调用成功返回，QJM 就认为成功。<br>选择进行同步的基准数据源，向 JournalNode 集群发送 acceptRecovery RPC 请求 QJM 根据 prepareRecovery 的返回结果，选择一个 JournalNode 上的 EditLog Segment 作为同步的基准数据源。选择基准数据源的原则大致是：在 in-progress 状态和 finalized 状态的 Segment 之间优先选择 finalized 状态的 Segment。如果都是 in-progress 状态的话，那么优先选择 Epoch 比较高的 Segment(也就是优先选择更新的)，如果 Epoch 也一样，那么优先选择包含的事务数更多的 Segment。</p>\n</li>\n<li><p>acceptRecovery RPC：向 JournalNode 集群发送 acceptRecovery RPC 请求，将选定的基准数据源作为参数。JournalNode 接收到 acceptRecovery RPC 请求之后，从基准数据源 JournalNode 的 JournalNodeHttpServer 上下载 EditLog Segment，将本地的 EditLog Segment 替换为下载的 EditLog Segment。<br>这一步对应于 Paxos 算法的 Phase 2a 和 Phase 2b 两步。Paxos 算法的 Phase2 是 accept 阶段，这也与方法名 acceptRecovery 相对应。只要大多数 JournalNode 的 acceptRecovery RPC 调用成功返回，QJM就认为成功。</p>\n</li>\n<li><p>finalizeLogSegment RPC：上一步执行完成之后，QJM 确认大多数 JournalNode 上的 EditLog Segment 已经从基准数据源进行了同步。接下来，QJM 向 JournalNode 集群发送 finalizeLogSegment RPC 请求，JournalNode 接收到请求之后，将对应的 EditLog Segment 从 in-progress 状态转换为 finalized 状态<br>只要大多数 JournalNode 的 finalizeLogSegment RPC 调用成功返回，QJM 就认为成功。此时可以保证 JournalNode 集群的大多数节点上的 EditLog 已经处于一致的状态，这样 QJM才能安全地从 JournalNode 集群上补齐落后的 EditLog 数据。</p>\n</li>\n</ol>\n<h1 id=\"reading\"><a href=\"#reading\" class=\"headerlink\" title=\"reading\"></a>reading</h1><p>只从每个节点读处于关闭状态的segment，通过getEditLogManifest() RPC 从所有的节点得到数据merge到RedundantEditLogInputStreams，从节点可以从任何JN的关闭状态的segment中选读，这种redundant 输入流可以自动容错。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>QJM是QuorumJournalManager的简写，是Hadoop V2中的namenode的默认HA方案。qjm方案简单，只有两个组件：journal node和libqjm，qjm方案并不负责选主，选主交由外部实现，例如基于zookeeper实现。libqjm负责journal数据的读写，其中包括journal在异常情况下的一致性恢复；journalnode负责log数据的存储。</p>\n<h1 id=\"Writing-logs\"><a href=\"#Writing-logs\" class=\"headerlink\" title=\"Writing-logs\"></a>Writing-logs</h1><h2 id=\"QJM主管理流程\"><a href=\"#QJM主管理流程\" class=\"headerlink\" title=\"QJM主管理流程\"></a>QJM主管理流程</h2><ol>\n<li>fencing prior writers：writer必须确保没有之前的writers依然在写edit logs。隔离流程见下述分析</li>\n<li>recovering in-progress logs：在上一个writer写入log失败，JNs的log长度是存在不同的可能性</li>\n<li>start a new log segment：log写入的常规流程</li>\n<li>write edits：对于需要批量写入的edits，writer发送edits到所有的JNs，一旦收到大多数JN的成功响应（N/2N+1），则认为写成功。当少数JN写入失败或者慢响应而使得写入edits pending超过配置阈值，则JN会被标记为outOfSync，当前的log segment将不再被使用。只要大多数节点存活，则不会有问题。dead node在下次edit log写入时会recover。</li>\n<li>finalize log segment：QJM通过RPC告知所有的JNs关闭log segment。只要收到了大多数响应，则segment被关闭，开启下一个log segment（步骤3）</li>\n</ol>\n<h2 id=\"Fencing-writers\"><a href=\"#Fencing-writers\" class=\"headerlink\" title=\"Fencing writers\"></a>Fencing writers</h2><p>引入epoch做到隔离功能，epoch需要具备以下特性：</p>\n<ul>\n<li>writer成为主时 或 对edit logs变更时，需要赋予epoch</li>\n<li>epoch全局单调递增</li>\n<li>QJM通过newEpoch(N)告知所有JNs新的epoch，只有收到大多数JNs成功的响应才开始以此epoch工作</li>\n<li>任何变更edit logs的RPC（例如logEdits(), startLogSegment()），必须携带请求者的epoch</li>\n<li>JN在响应任何RPC（除newEpoch外）前，必须检查自身记录的epoch（lastPromised变量，持久化到本地）和请求的epoch。如果请求epoch小于自身记录的epoch，则拒绝请求；如果大于自身记录的epoch，则会更新自身记录。</li>\n</ul>\n<h2 id=\"Writer-epochs\"><a href=\"#Writer-epochs\" class=\"headerlink\" title=\"Writer epochs\"></a>Writer epochs</h2><p>JN除了管理lastPromisedEpoch，还管理了一个持久化变量lastWriterEpoch，在开始写new log segment会更新，这样可以跟踪上一次writer的epoch。此变量在恢复流程中很重要。</p>\n<h2 id=\"Generating-epoch\"><a href=\"#Generating-epoch\" class=\"headerlink\" title=\"Generating epoch\"></a>Generating epoch</h2><p>从Paxos中借鉴生成epoch方法：</p>\n<ol>\n<li>QJM发送getJournalState()到所有JNs，每个JN以lastpromisedEpoch值响应</li>\n<li>收到大多数JN响应后，QJM从中选取看到的最大值，然后自增1作为proposedEpoch</li>\n<li>QJM发送newEpoch(proposedEpoch)到所有JNs，每个JN自动比较proposal和自身的lastpromisedEpoch，如果proposal大，则更新lastpromisedEpoch并响应成功，如果proposal小，则响应失败</li>\n<li>收到大多数成功响应后，设置propose epoch为当前writer的epoch，否则抛出一个IOException终止切成active</li>\n</ol>\n<h2 id=\"Synchronizing-logs\"><a href=\"#Synchronizing-logs\" class=\"headerlink\" title=\"Synchronizing logs\"></a>Synchronizing logs</h2><ol>\n<li>定义最新的log segment的事务id</li>\n<li>定义上一个被成功提交到多数JN的事务ID，等价于定义哪一个JN包含最新的被提交事务的log</li>\n<li>确保多数JN通过从包含最新log segment的JN同步log segment</li>\n<li>指导这些JN标记log segment关闭</li>\n</ol>\n<h2 id=\"Invariants\"><a href=\"#Invariants\" class=\"headerlink\" title=\"Invariants\"></a>Invariants</h2><p>定理1：一旦一个log segment被关闭，将不会再被开启<br>定理2：如果一个log segment在事务id N开始，那必然有多数节点包含log segment在事务N-1结束<br>定理3：如果在任何节点有一个log segment在事务id N结束，那在多数节点必然有一个log segment在事务id结束</p>\n<h2 id=\"Recovery-algorithm\"><a href=\"#Recovery-algorithm\" class=\"headerlink\" title=\"Recovery algorithm\"></a>Recovery algorithm</h2><p>在一个新writer启动，上一个writer很可能遗留一些log segments处于in-progress状态。在新writer开始写之前，必须recover in-progress状态的segment，然后关闭它。这个流程的需求如下：</p>\n<ul>\n<li>被关闭的log必须包含所有之前已经被提交的事务</li>\n<li>log必须在多数节点中被关闭</li>\n<li>所有的loggers必须在相同的长度及内容处关闭。</li>\n</ul>\n<p>这个问题是通过Paxos算法解决：<br>这个同传统Paxos不同的地方在于，我们复用了在newEpoch步骤中产生的唯一的epoch，而不是为了recover流程新生成一个。这个同multi-Paxos算法类似：</p>\n<ol>\n<li><p>定义recover哪个segment：需要恢复的 Edit Log 只可能是各个 JournalNode 上的最后一个 Edit Log Segment，如前所述，JN 在处理完 newEpoch RPC 请求之后，会向 QJM 返回它自己的本地磁盘上最新的一个 EditLog Segment 的起始事务 id，这个起始事务 id 实际上也作为这个 EditLog Segment 的 id。QJM会在所有这些 id 之中选择一个最大的 id 作为要进行数据恢复的 EditLog Segment 的 id。</p>\n</li>\n<li><p>prepareRecovery RPC ：接下来向 JournalNode 集群发送 prepareRecovery RPC 请求，请求的参数就是选出的 EditLog Segment 的 id。JournalNode 收到请求后返回本地磁盘上这个 Segment 的起始事务 id、结束事务 id 和状态 (in-progress 或 finalized)。<br>这一步对应于 Paxos 算法的 Phase 1a 和 Phase 1b 两步。Paxos 算法的 Phase1 是 prepare 阶段，这也与方法名 prepareRecovery 相对应。并且这里以前面产生的新的 Epoch 作为 Paxos 算法中的提案编号 (proposal number)。只要大多数的 JournalNode 的 prepareRecovery RPC 调用成功返回，QJM 就认为成功。<br>选择进行同步的基准数据源，向 JournalNode 集群发送 acceptRecovery RPC 请求 QJM 根据 prepareRecovery 的返回结果，选择一个 JournalNode 上的 EditLog Segment 作为同步的基准数据源。选择基准数据源的原则大致是：在 in-progress 状态和 finalized 状态的 Segment 之间优先选择 finalized 状态的 Segment。如果都是 in-progress 状态的话，那么优先选择 Epoch 比较高的 Segment(也就是优先选择更新的)，如果 Epoch 也一样，那么优先选择包含的事务数更多的 Segment。</p>\n</li>\n<li><p>acceptRecovery RPC：向 JournalNode 集群发送 acceptRecovery RPC 请求，将选定的基准数据源作为参数。JournalNode 接收到 acceptRecovery RPC 请求之后，从基准数据源 JournalNode 的 JournalNodeHttpServer 上下载 EditLog Segment，将本地的 EditLog Segment 替换为下载的 EditLog Segment。<br>这一步对应于 Paxos 算法的 Phase 2a 和 Phase 2b 两步。Paxos 算法的 Phase2 是 accept 阶段，这也与方法名 acceptRecovery 相对应。只要大多数 JournalNode 的 acceptRecovery RPC 调用成功返回，QJM就认为成功。</p>\n</li>\n<li><p>finalizeLogSegment RPC：上一步执行完成之后，QJM 确认大多数 JournalNode 上的 EditLog Segment 已经从基准数据源进行了同步。接下来，QJM 向 JournalNode 集群发送 finalizeLogSegment RPC 请求，JournalNode 接收到请求之后，将对应的 EditLog Segment 从 in-progress 状态转换为 finalized 状态<br>只要大多数 JournalNode 的 finalizeLogSegment RPC 调用成功返回，QJM 就认为成功。此时可以保证 JournalNode 集群的大多数节点上的 EditLog 已经处于一致的状态，这样 QJM才能安全地从 JournalNode 集群上补齐落后的 EditLog 数据。</p>\n</li>\n</ol>\n<h1 id=\"reading\"><a href=\"#reading\" class=\"headerlink\" title=\"reading\"></a>reading</h1><p>只从每个节点读处于关闭状态的segment，通过getEditLogManifest() RPC 从所有的节点得到数据merge到RedundantEditLogInputStreams，从节点可以从任何JN的关闭状态的segment中选读，这种redundant 输入流可以自动容错。</p>\n"},{"title":"linux vim开发环境配置","type":"categories","copyright":true,"date":"2018-05-14T15:20:22.000Z","_content":"\n\n# 背景 #\n最近换工作了，电脑中的vim插件配置需要做一次备份，大概记录一下常用的vim开发环境插件配置\n\n# 插件管家vundle #\nVundle 是 Vim bundle 的简称,是一个 Vim 插件管理器.   \n支持如下操作：\n\n1. 在.vimrc中跟踪和管理插件\n2. 安装特定格式的插件(a.k.a. scripts/bundle)\n3. 更新特定格式插件\n4. 通过插件名称搜索Vim scripts中的插件\n5. 清理未使用的插件\n\n安装方法:  \n``\n$ git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\n``\n \n默认安装位置: ~/.vim/bundle/vundle  \n配置位置:   \n``\n$vim ~/.vimrc\n``\n\n支持插件类型:  \n\n1. Github上vim-scripts仓库的插件\n2. Github上非vim-scripts仓库的插件 \n3. 不在Github上的插件 \n\n# 常用插件介绍 #\n## nerdtree ##\n显示树形目录，方便阅读管理工程源码  \n常见操作命令: [vim NERDTree 快捷键](https://gist.github.com/ifels/e0a6d79ee60e113f4294)\n\n常见配合使用插件:\n\n- nerdtree-git-plugin: 显示git信息\n- vim-nerdtree-tabs：支持tab展示代码\n\n \n## ctrlp ##\n主页：https://github.com/kien/ctrlp.vim  \n查找工程目录下的文件\n\n支持模糊匹配  \n可切换匹配模式，默认是 path, 其实很少需要切换\n\n## ctrlp-funky ##\n可以模糊搜索文件内容\n\n## taglist ##\n前提安装ctags  \n展示文件关键字列表\n\n# 附件 #\n[明无梦的 Vim 使用记录](https://www.dreamxu.com/books/vim/index.html)  \n[笔者vim环境配置源码](https://github.com/ksk0014/vim_ide_configure)\n\n\n","source":"_posts/linux-vim开发环境配置.md","raw":"---\ntitle: linux vim开发环境配置\ntype: categories\ncopyright: true\ndate: 2018-05-14 23:20:22\ntags:\n- Tools\ncategories:\n- 基础环境\n---\n\n\n# 背景 #\n最近换工作了，电脑中的vim插件配置需要做一次备份，大概记录一下常用的vim开发环境插件配置\n\n# 插件管家vundle #\nVundle 是 Vim bundle 的简称,是一个 Vim 插件管理器.   \n支持如下操作：\n\n1. 在.vimrc中跟踪和管理插件\n2. 安装特定格式的插件(a.k.a. scripts/bundle)\n3. 更新特定格式插件\n4. 通过插件名称搜索Vim scripts中的插件\n5. 清理未使用的插件\n\n安装方法:  \n``\n$ git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\n``\n \n默认安装位置: ~/.vim/bundle/vundle  \n配置位置:   \n``\n$vim ~/.vimrc\n``\n\n支持插件类型:  \n\n1. Github上vim-scripts仓库的插件\n2. Github上非vim-scripts仓库的插件 \n3. 不在Github上的插件 \n\n# 常用插件介绍 #\n## nerdtree ##\n显示树形目录，方便阅读管理工程源码  \n常见操作命令: [vim NERDTree 快捷键](https://gist.github.com/ifels/e0a6d79ee60e113f4294)\n\n常见配合使用插件:\n\n- nerdtree-git-plugin: 显示git信息\n- vim-nerdtree-tabs：支持tab展示代码\n\n \n## ctrlp ##\n主页：https://github.com/kien/ctrlp.vim  \n查找工程目录下的文件\n\n支持模糊匹配  \n可切换匹配模式，默认是 path, 其实很少需要切换\n\n## ctrlp-funky ##\n可以模糊搜索文件内容\n\n## taglist ##\n前提安装ctags  \n展示文件关键字列表\n\n# 附件 #\n[明无梦的 Vim 使用记录](https://www.dreamxu.com/books/vim/index.html)  \n[笔者vim环境配置源码](https://github.com/ksk0014/vim_ide_configure)\n\n\n","slug":"linux-vim开发环境配置","published":1,"updated":"2018-05-14T15:24:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh73ilqz00031lcag3fluj0a","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>最近换工作了，电脑中的vim插件配置需要做一次备份，大概记录一下常用的vim开发环境插件配置</p>\n<h1 id=\"插件管家vundle\"><a href=\"#插件管家vundle\" class=\"headerlink\" title=\"插件管家vundle\"></a>插件管家vundle</h1><p>Vundle 是 Vim bundle 的简称,是一个 Vim 插件管理器.<br>支持如下操作：</p>\n<ol>\n<li>在.vimrc中跟踪和管理插件</li>\n<li>安装特定格式的插件(a.k.a. scripts/bundle)</li>\n<li>更新特定格式插件</li>\n<li>通过插件名称搜索Vim scripts中的插件</li>\n<li>清理未使用的插件</li>\n</ol>\n<p>安装方法:<br><code>$ git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</code></p>\n<p>默认安装位置: ~/.vim/bundle/vundle<br>配置位置:<br><code>$vim ~/.vimrc</code></p>\n<p>支持插件类型:  </p>\n<ol>\n<li>Github上vim-scripts仓库的插件</li>\n<li>Github上非vim-scripts仓库的插件 </li>\n<li>不在Github上的插件 </li>\n</ol>\n<h1 id=\"常用插件介绍\"><a href=\"#常用插件介绍\" class=\"headerlink\" title=\"常用插件介绍\"></a>常用插件介绍</h1><h2 id=\"nerdtree\"><a href=\"#nerdtree\" class=\"headerlink\" title=\"nerdtree\"></a>nerdtree</h2><p>显示树形目录，方便阅读管理工程源码<br>常见操作命令: <a href=\"https://gist.github.com/ifels/e0a6d79ee60e113f4294\" target=\"_blank\" rel=\"noopener\">vim NERDTree 快捷键</a></p>\n<p>常见配合使用插件:</p>\n<ul>\n<li>nerdtree-git-plugin: 显示git信息</li>\n<li>vim-nerdtree-tabs：支持tab展示代码</li>\n</ul>\n<h2 id=\"ctrlp\"><a href=\"#ctrlp\" class=\"headerlink\" title=\"ctrlp\"></a>ctrlp</h2><p>主页：<a href=\"https://github.com/kien/ctrlp.vim\" target=\"_blank\" rel=\"noopener\">https://github.com/kien/ctrlp.vim</a><br>查找工程目录下的文件</p>\n<p>支持模糊匹配<br>可切换匹配模式，默认是 path, 其实很少需要切换</p>\n<h2 id=\"ctrlp-funky\"><a href=\"#ctrlp-funky\" class=\"headerlink\" title=\"ctrlp-funky\"></a>ctrlp-funky</h2><p>可以模糊搜索文件内容</p>\n<h2 id=\"taglist\"><a href=\"#taglist\" class=\"headerlink\" title=\"taglist\"></a>taglist</h2><p>前提安装ctags<br>展示文件关键字列表</p>\n<h1 id=\"附件\"><a href=\"#附件\" class=\"headerlink\" title=\"附件\"></a>附件</h1><p><a href=\"https://www.dreamxu.com/books/vim/index.html\" target=\"_blank\" rel=\"noopener\">明无梦的 Vim 使用记录</a><br><a href=\"https://github.com/ksk0014/vim_ide_configure\" target=\"_blank\" rel=\"noopener\">笔者vim环境配置源码</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>最近换工作了，电脑中的vim插件配置需要做一次备份，大概记录一下常用的vim开发环境插件配置</p>\n<h1 id=\"插件管家vundle\"><a href=\"#插件管家vundle\" class=\"headerlink\" title=\"插件管家vundle\"></a>插件管家vundle</h1><p>Vundle 是 Vim bundle 的简称,是一个 Vim 插件管理器.<br>支持如下操作：</p>\n<ol>\n<li>在.vimrc中跟踪和管理插件</li>\n<li>安装特定格式的插件(a.k.a. scripts/bundle)</li>\n<li>更新特定格式插件</li>\n<li>通过插件名称搜索Vim scripts中的插件</li>\n<li>清理未使用的插件</li>\n</ol>\n<p>安装方法:<br><code>$ git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</code></p>\n<p>默认安装位置: ~/.vim/bundle/vundle<br>配置位置:<br><code>$vim ~/.vimrc</code></p>\n<p>支持插件类型:  </p>\n<ol>\n<li>Github上vim-scripts仓库的插件</li>\n<li>Github上非vim-scripts仓库的插件 </li>\n<li>不在Github上的插件 </li>\n</ol>\n<h1 id=\"常用插件介绍\"><a href=\"#常用插件介绍\" class=\"headerlink\" title=\"常用插件介绍\"></a>常用插件介绍</h1><h2 id=\"nerdtree\"><a href=\"#nerdtree\" class=\"headerlink\" title=\"nerdtree\"></a>nerdtree</h2><p>显示树形目录，方便阅读管理工程源码<br>常见操作命令: <a href=\"https://gist.github.com/ifels/e0a6d79ee60e113f4294\" target=\"_blank\" rel=\"noopener\">vim NERDTree 快捷键</a></p>\n<p>常见配合使用插件:</p>\n<ul>\n<li>nerdtree-git-plugin: 显示git信息</li>\n<li>vim-nerdtree-tabs：支持tab展示代码</li>\n</ul>\n<h2 id=\"ctrlp\"><a href=\"#ctrlp\" class=\"headerlink\" title=\"ctrlp\"></a>ctrlp</h2><p>主页：<a href=\"https://github.com/kien/ctrlp.vim\" target=\"_blank\" rel=\"noopener\">https://github.com/kien/ctrlp.vim</a><br>查找工程目录下的文件</p>\n<p>支持模糊匹配<br>可切换匹配模式，默认是 path, 其实很少需要切换</p>\n<h2 id=\"ctrlp-funky\"><a href=\"#ctrlp-funky\" class=\"headerlink\" title=\"ctrlp-funky\"></a>ctrlp-funky</h2><p>可以模糊搜索文件内容</p>\n<h2 id=\"taglist\"><a href=\"#taglist\" class=\"headerlink\" title=\"taglist\"></a>taglist</h2><p>前提安装ctags<br>展示文件关键字列表</p>\n<h1 id=\"附件\"><a href=\"#附件\" class=\"headerlink\" title=\"附件\"></a>附件</h1><p><a href=\"https://www.dreamxu.com/books/vim/index.html\" target=\"_blank\" rel=\"noopener\">明无梦的 Vim 使用记录</a><br><a href=\"https://github.com/ksk0014/vim_ide_configure\" target=\"_blank\" rel=\"noopener\">笔者vim环境配置源码</a></p>\n"},{"title":"paxos算法理解","type":"categories","copyright":true,"date":"2018-05-15T02:09:33.000Z","_content":"\n\n# Paxos是什么 #\n解决了分布式系统如果就某个值达成一个决议\n\n# paxos原则 #\n安全原则：保证不做错事  \n\n* 只能有一个值被批准，不能出现第二个值把第一个覆盖的情况\n* 每个节点只能学习到已经被批准的值，不能学习没有被批准的值\n\n存活原则：多数节点存活下必须最终要做到的事  \n\n* 最终会批准某个被提议的值\n* 一个值被批准了，其他服务器最终会学习到这个值\n\n# basic paxos算法 #\n三个人（A、B、C）在三个城市要达成一个决议，决议可以是：明天去哪见面/吃什么/去哪家馆子吃/谁结账 等，采用少数服从多数的原则  \n下面以A的视角考虑问题  \n\n1. 首先要给这些问题编个序号 ID（对应去哪这件事），代表这件事但是最终的value是啥要提起决议后才知道，但是A不知道现在应该是用哪个ID了，于是就问了一下B、C，然后B、C告知目前已经达成共识或者正在达成共识的ID是多少，A自己合计了一下然后ID + 1之后提出自己的提议，明天去beijing见面吧\n2. 但是这时候A就想了，别人会不会也拿着相同的ID抢着提议呢，我得先问一下这个ID有被占用没，别太尴尬。当B、C两人没有回应过比这个A提问时间点以后的询问或者没有确认过A提问时间点以后的提议，才给A返回说我同意提议，并且告诉A，我上一次接受过的这个议题的议案是啥，并承诺不在接受小于A提议时间点之前的议案\n3. A收到了大多数的回复后，且大多数回复中不带有已经接受的议案，那么正式提起自己的议案\n4. B、C收到提议后，和自己记录的上一次response的时间点相比，如果小于当前提议的时间点，则接受议案，否则拒绝议案\n\nA、B、C以外的D想知道他们达成什么样的决议:  \n于是同时向三人发问，某一个ID（对应的事务）你的决议是什么，然后根据大多数原则，即可知道最终的决议是什么了\n\n这个算法有什么问题呢？  \n一次决议的过程，需要经历3次RTT  \n\n1. 确定事务编号ID\n2. 为了确保无并行的相同事务ID提议，先发起询问\n3. 发起提议\n\n算法汇总图:  \n![basic paxos算法](paxos算法理解/WechatIMG3614.jpeg)\n\n\n# multi paxos算法 #\n上述basic paxos算法的问题在于每个人都可以发表自己的意见，同时没有一个中心点去分配事务ID，则不可避免需要一个prepare阶段去避免在一个paxos投票周期内出现多种事务同时投票\n\nmulti paxos算法即提出在同一时间段内，只有一个人发提案，这个人就是主，通过执行一次basic paxos投票，获得大多数响应的即为主，主在开始工作之前需要告诉其他人，我要开始工作了，获得大多数响应后，开始提出自己的议案，这样除选主过程外，其他提案只会有一次RTT\n\n在Paxos协议中，对于决议的读取也是需要执行一轮Paxos过程的，在实际工程中做数据恢复时，对每条日志都执行一轮Paxos的代价过大，因此引入需要引入一种被成为confirm的机制，即leader持久化一条日志，得到多数派的accept后，就再写一条针对这条日志的confirm日志，表示这条日志已经确认形成了多数派备份，在回放日志时，判断如果一条日志有对应的confirm日志，则可以直接读取本地内容，而不需要再执行一轮Paxos。confirm日志只要写本地即可，不需要同步到备机，但是出于提示备机及时回放收到日志的考虑（备机收到一条日志后并不能立即回放，需要确认这条日志已经形成多数派备份才能回放），leader也会批量的给备机同步confirm日志。出于性能的考虑，confirm日志往往是延迟的成批写出去，因此仍然会出现部分日志已经形成多数派备份，但是没有对应的confirm日志的情况，对于这些日志，需要在恢复过程中进行重确认。\n\n# 参考资料 #\n[Paxos三部曲](http://oceanbase.org.cn/?p=111)\n\n\n\n","source":"_posts/paxos算法理解.md","raw":"---\ntitle: paxos算法理解\ntype: categories\ncopyright: true\ndate: 2018-05-15 10:09:33\ntags:\n- paxos\ncategories:\n- 分布式系统设计\n---\n\n\n# Paxos是什么 #\n解决了分布式系统如果就某个值达成一个决议\n\n# paxos原则 #\n安全原则：保证不做错事  \n\n* 只能有一个值被批准，不能出现第二个值把第一个覆盖的情况\n* 每个节点只能学习到已经被批准的值，不能学习没有被批准的值\n\n存活原则：多数节点存活下必须最终要做到的事  \n\n* 最终会批准某个被提议的值\n* 一个值被批准了，其他服务器最终会学习到这个值\n\n# basic paxos算法 #\n三个人（A、B、C）在三个城市要达成一个决议，决议可以是：明天去哪见面/吃什么/去哪家馆子吃/谁结账 等，采用少数服从多数的原则  \n下面以A的视角考虑问题  \n\n1. 首先要给这些问题编个序号 ID（对应去哪这件事），代表这件事但是最终的value是啥要提起决议后才知道，但是A不知道现在应该是用哪个ID了，于是就问了一下B、C，然后B、C告知目前已经达成共识或者正在达成共识的ID是多少，A自己合计了一下然后ID + 1之后提出自己的提议，明天去beijing见面吧\n2. 但是这时候A就想了，别人会不会也拿着相同的ID抢着提议呢，我得先问一下这个ID有被占用没，别太尴尬。当B、C两人没有回应过比这个A提问时间点以后的询问或者没有确认过A提问时间点以后的提议，才给A返回说我同意提议，并且告诉A，我上一次接受过的这个议题的议案是啥，并承诺不在接受小于A提议时间点之前的议案\n3. A收到了大多数的回复后，且大多数回复中不带有已经接受的议案，那么正式提起自己的议案\n4. B、C收到提议后，和自己记录的上一次response的时间点相比，如果小于当前提议的时间点，则接受议案，否则拒绝议案\n\nA、B、C以外的D想知道他们达成什么样的决议:  \n于是同时向三人发问，某一个ID（对应的事务）你的决议是什么，然后根据大多数原则，即可知道最终的决议是什么了\n\n这个算法有什么问题呢？  \n一次决议的过程，需要经历3次RTT  \n\n1. 确定事务编号ID\n2. 为了确保无并行的相同事务ID提议，先发起询问\n3. 发起提议\n\n算法汇总图:  \n![basic paxos算法](paxos算法理解/WechatIMG3614.jpeg)\n\n\n# multi paxos算法 #\n上述basic paxos算法的问题在于每个人都可以发表自己的意见，同时没有一个中心点去分配事务ID，则不可避免需要一个prepare阶段去避免在一个paxos投票周期内出现多种事务同时投票\n\nmulti paxos算法即提出在同一时间段内，只有一个人发提案，这个人就是主，通过执行一次basic paxos投票，获得大多数响应的即为主，主在开始工作之前需要告诉其他人，我要开始工作了，获得大多数响应后，开始提出自己的议案，这样除选主过程外，其他提案只会有一次RTT\n\n在Paxos协议中，对于决议的读取也是需要执行一轮Paxos过程的，在实际工程中做数据恢复时，对每条日志都执行一轮Paxos的代价过大，因此引入需要引入一种被成为confirm的机制，即leader持久化一条日志，得到多数派的accept后，就再写一条针对这条日志的confirm日志，表示这条日志已经确认形成了多数派备份，在回放日志时，判断如果一条日志有对应的confirm日志，则可以直接读取本地内容，而不需要再执行一轮Paxos。confirm日志只要写本地即可，不需要同步到备机，但是出于提示备机及时回放收到日志的考虑（备机收到一条日志后并不能立即回放，需要确认这条日志已经形成多数派备份才能回放），leader也会批量的给备机同步confirm日志。出于性能的考虑，confirm日志往往是延迟的成批写出去，因此仍然会出现部分日志已经形成多数派备份，但是没有对应的confirm日志的情况，对于这些日志，需要在恢复过程中进行重确认。\n\n# 参考资料 #\n[Paxos三部曲](http://oceanbase.org.cn/?p=111)\n\n\n\n","slug":"paxos算法理解","published":1,"updated":"2018-05-15T03:03:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh73ilr400061lca9vlzqydh","content":"<h1 id=\"Paxos是什么\"><a href=\"#Paxos是什么\" class=\"headerlink\" title=\"Paxos是什么\"></a>Paxos是什么</h1><p>解决了分布式系统如果就某个值达成一个决议</p>\n<h1 id=\"paxos原则\"><a href=\"#paxos原则\" class=\"headerlink\" title=\"paxos原则\"></a>paxos原则</h1><p>安全原则：保证不做错事  </p>\n<ul>\n<li>只能有一个值被批准，不能出现第二个值把第一个覆盖的情况</li>\n<li>每个节点只能学习到已经被批准的值，不能学习没有被批准的值</li>\n</ul>\n<p>存活原则：多数节点存活下必须最终要做到的事  </p>\n<ul>\n<li>最终会批准某个被提议的值</li>\n<li>一个值被批准了，其他服务器最终会学习到这个值</li>\n</ul>\n<h1 id=\"basic-paxos算法\"><a href=\"#basic-paxos算法\" class=\"headerlink\" title=\"basic paxos算法\"></a>basic paxos算法</h1><p>三个人（A、B、C）在三个城市要达成一个决议，决议可以是：明天去哪见面/吃什么/去哪家馆子吃/谁结账 等，采用少数服从多数的原则<br>下面以A的视角考虑问题  </p>\n<ol>\n<li>首先要给这些问题编个序号 ID（对应去哪这件事），代表这件事但是最终的value是啥要提起决议后才知道，但是A不知道现在应该是用哪个ID了，于是就问了一下B、C，然后B、C告知目前已经达成共识或者正在达成共识的ID是多少，A自己合计了一下然后ID + 1之后提出自己的提议，明天去beijing见面吧</li>\n<li>但是这时候A就想了，别人会不会也拿着相同的ID抢着提议呢，我得先问一下这个ID有被占用没，别太尴尬。当B、C两人没有回应过比这个A提问时间点以后的询问或者没有确认过A提问时间点以后的提议，才给A返回说我同意提议，并且告诉A，我上一次接受过的这个议题的议案是啥，并承诺不在接受小于A提议时间点之前的议案</li>\n<li>A收到了大多数的回复后，且大多数回复中不带有已经接受的议案，那么正式提起自己的议案</li>\n<li>B、C收到提议后，和自己记录的上一次response的时间点相比，如果小于当前提议的时间点，则接受议案，否则拒绝议案</li>\n</ol>\n<p>A、B、C以外的D想知道他们达成什么样的决议:<br>于是同时向三人发问，某一个ID（对应的事务）你的决议是什么，然后根据大多数原则，即可知道最终的决议是什么了</p>\n<p>这个算法有什么问题呢？<br>一次决议的过程，需要经历3次RTT  </p>\n<ol>\n<li>确定事务编号ID</li>\n<li>为了确保无并行的相同事务ID提议，先发起询问</li>\n<li>发起提议</li>\n</ol>\n<p>算法汇总图:<br><img src=\"paxos算法理解/WechatIMG3614.jpeg\" alt=\"basic paxos算法\"></p>\n<h1 id=\"multi-paxos算法\"><a href=\"#multi-paxos算法\" class=\"headerlink\" title=\"multi paxos算法\"></a>multi paxos算法</h1><p>上述basic paxos算法的问题在于每个人都可以发表自己的意见，同时没有一个中心点去分配事务ID，则不可避免需要一个prepare阶段去避免在一个paxos投票周期内出现多种事务同时投票</p>\n<p>multi paxos算法即提出在同一时间段内，只有一个人发提案，这个人就是主，通过执行一次basic paxos投票，获得大多数响应的即为主，主在开始工作之前需要告诉其他人，我要开始工作了，获得大多数响应后，开始提出自己的议案，这样除选主过程外，其他提案只会有一次RTT</p>\n<p>在Paxos协议中，对于决议的读取也是需要执行一轮Paxos过程的，在实际工程中做数据恢复时，对每条日志都执行一轮Paxos的代价过大，因此引入需要引入一种被成为confirm的机制，即leader持久化一条日志，得到多数派的accept后，就再写一条针对这条日志的confirm日志，表示这条日志已经确认形成了多数派备份，在回放日志时，判断如果一条日志有对应的confirm日志，则可以直接读取本地内容，而不需要再执行一轮Paxos。confirm日志只要写本地即可，不需要同步到备机，但是出于提示备机及时回放收到日志的考虑（备机收到一条日志后并不能立即回放，需要确认这条日志已经形成多数派备份才能回放），leader也会批量的给备机同步confirm日志。出于性能的考虑，confirm日志往往是延迟的成批写出去，因此仍然会出现部分日志已经形成多数派备份，但是没有对应的confirm日志的情况，对于这些日志，需要在恢复过程中进行重确认。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"http://oceanbase.org.cn/?p=111\" target=\"_blank\" rel=\"noopener\">Paxos三部曲</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Paxos是什么\"><a href=\"#Paxos是什么\" class=\"headerlink\" title=\"Paxos是什么\"></a>Paxos是什么</h1><p>解决了分布式系统如果就某个值达成一个决议</p>\n<h1 id=\"paxos原则\"><a href=\"#paxos原则\" class=\"headerlink\" title=\"paxos原则\"></a>paxos原则</h1><p>安全原则：保证不做错事  </p>\n<ul>\n<li>只能有一个值被批准，不能出现第二个值把第一个覆盖的情况</li>\n<li>每个节点只能学习到已经被批准的值，不能学习没有被批准的值</li>\n</ul>\n<p>存活原则：多数节点存活下必须最终要做到的事  </p>\n<ul>\n<li>最终会批准某个被提议的值</li>\n<li>一个值被批准了，其他服务器最终会学习到这个值</li>\n</ul>\n<h1 id=\"basic-paxos算法\"><a href=\"#basic-paxos算法\" class=\"headerlink\" title=\"basic paxos算法\"></a>basic paxos算法</h1><p>三个人（A、B、C）在三个城市要达成一个决议，决议可以是：明天去哪见面/吃什么/去哪家馆子吃/谁结账 等，采用少数服从多数的原则<br>下面以A的视角考虑问题  </p>\n<ol>\n<li>首先要给这些问题编个序号 ID（对应去哪这件事），代表这件事但是最终的value是啥要提起决议后才知道，但是A不知道现在应该是用哪个ID了，于是就问了一下B、C，然后B、C告知目前已经达成共识或者正在达成共识的ID是多少，A自己合计了一下然后ID + 1之后提出自己的提议，明天去beijing见面吧</li>\n<li>但是这时候A就想了，别人会不会也拿着相同的ID抢着提议呢，我得先问一下这个ID有被占用没，别太尴尬。当B、C两人没有回应过比这个A提问时间点以后的询问或者没有确认过A提问时间点以后的提议，才给A返回说我同意提议，并且告诉A，我上一次接受过的这个议题的议案是啥，并承诺不在接受小于A提议时间点之前的议案</li>\n<li>A收到了大多数的回复后，且大多数回复中不带有已经接受的议案，那么正式提起自己的议案</li>\n<li>B、C收到提议后，和自己记录的上一次response的时间点相比，如果小于当前提议的时间点，则接受议案，否则拒绝议案</li>\n</ol>\n<p>A、B、C以外的D想知道他们达成什么样的决议:<br>于是同时向三人发问，某一个ID（对应的事务）你的决议是什么，然后根据大多数原则，即可知道最终的决议是什么了</p>\n<p>这个算法有什么问题呢？<br>一次决议的过程，需要经历3次RTT  </p>\n<ol>\n<li>确定事务编号ID</li>\n<li>为了确保无并行的相同事务ID提议，先发起询问</li>\n<li>发起提议</li>\n</ol>\n<p>算法汇总图:<br><img src=\"paxos算法理解/WechatIMG3614.jpeg\" alt=\"basic paxos算法\"></p>\n<h1 id=\"multi-paxos算法\"><a href=\"#multi-paxos算法\" class=\"headerlink\" title=\"multi paxos算法\"></a>multi paxos算法</h1><p>上述basic paxos算法的问题在于每个人都可以发表自己的意见，同时没有一个中心点去分配事务ID，则不可避免需要一个prepare阶段去避免在一个paxos投票周期内出现多种事务同时投票</p>\n<p>multi paxos算法即提出在同一时间段内，只有一个人发提案，这个人就是主，通过执行一次basic paxos投票，获得大多数响应的即为主，主在开始工作之前需要告诉其他人，我要开始工作了，获得大多数响应后，开始提出自己的议案，这样除选主过程外，其他提案只会有一次RTT</p>\n<p>在Paxos协议中，对于决议的读取也是需要执行一轮Paxos过程的，在实际工程中做数据恢复时，对每条日志都执行一轮Paxos的代价过大，因此引入需要引入一种被成为confirm的机制，即leader持久化一条日志，得到多数派的accept后，就再写一条针对这条日志的confirm日志，表示这条日志已经确认形成了多数派备份，在回放日志时，判断如果一条日志有对应的confirm日志，则可以直接读取本地内容，而不需要再执行一轮Paxos。confirm日志只要写本地即可，不需要同步到备机，但是出于提示备机及时回放收到日志的考虑（备机收到一条日志后并不能立即回放，需要确认这条日志已经形成多数派备份才能回放），leader也会批量的给备机同步confirm日志。出于性能的考虑，confirm日志往往是延迟的成批写出去，因此仍然会出现部分日志已经形成多数派备份，但是没有对应的confirm日志的情况，对于这些日志，需要在恢复过程中进行重确认。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"http://oceanbase.org.cn/?p=111\" target=\"_blank\" rel=\"noopener\">Paxos三部曲</a></p>\n"},{"title":"分布式存储质量保障体系","date":"2018-05-04T13:42:32.000Z","_content":"\n# 测试流程 #\n\n代码review  --> UT（L1）–> L2（简单功能测试）–> L3（全量回归测试）–> 异常环境 --> 集成测试 --> 性能测试 -->  自动上线 --> 线上灰度测试\n\n# 测试流程功能简述 #\n\n代码review：主要是代码规范性检查，coding风格、代码书写合理性（项目高工查），测试人员需要关注log打印是否合理、是否有冗余或缺失、日志级别是否合理\n\n* UT：auto trigger，UT测试代码由研发人员负责编写，测试人员需要维护UT测试环境、推动单测问题解决、推动单测覆盖率提升\n* L2：auto trigger，测试用例为全量测试中的一小部分，测试时长在30分钟以内，目的是快速发现CI代码在基本接口功能上面存在的问题，及时推动研发人员解决\n* L3：daily build，全量测试，考察代码在复杂场景下、单个异常下运行情况，测试时间应当在12h以内，测试问题第二天及时反馈RD解决，问题绝不过夜\n* failover：hand trigger，全量回归三轮无异常，版本拉分支进入异常环境，多种异常混合、持续压力、异常预案演练、集群服务能力评估，运行三天无问题，产出测试报告\n* 集成测试：hand trigger upgrade，failover环境三天无问题，版本进入集成环境，版本兼容性测试、上下游模块对接测试，观察三天\n* 性能测试：hand trigger，集成环境三天无异常，开始集群性能测试，观察版本间性能是否存在回退，如存在推动定位调优，产出性能测试报告\n* 自动上线：hand trigger，借助变更平台上线\n* 线上灰度测试：版本上线时触发，代码相对简单，测试需要关注的是平台维护、报警信息补全完善\n\n# 新patch测试须知 #\n\n1. 功能设计阶段：参与设计讨论\n2. 功能开发阶段：与研发功能确认接口，开发对应测试用例，编写测试方案设计文档\n3. 功能提测阶段：review功能实现逻辑，最好能看懂业务逻辑层面的代码，调通新增测试用例，加入回归测试\n4. 功能验收阶段：稳定回归3轮，有问题及时推动解决，问题绝不过夜，及时更新测试进度记录文档\n5. 分支测试阶段：功能验收通过，推入failover环境，有问题及时推动解决，产出测试报告\n6. 集成环境观察阶段：上线集成环境，观察兼容性、联调上下游环境、性能回退，产出测试报告\n7. 最后上线阶段：冒烟测试\n","source":"_posts/分布式存储质量保障体系.md","raw":"---\ntitle: 分布式存储质量保障体系\ndate: 2018-05-04 21:42:32\ntags:\n- Testing Framework\ncategories:\n- 测试设计\n---\n\n# 测试流程 #\n\n代码review  --> UT（L1）–> L2（简单功能测试）–> L3（全量回归测试）–> 异常环境 --> 集成测试 --> 性能测试 -->  自动上线 --> 线上灰度测试\n\n# 测试流程功能简述 #\n\n代码review：主要是代码规范性检查，coding风格、代码书写合理性（项目高工查），测试人员需要关注log打印是否合理、是否有冗余或缺失、日志级别是否合理\n\n* UT：auto trigger，UT测试代码由研发人员负责编写，测试人员需要维护UT测试环境、推动单测问题解决、推动单测覆盖率提升\n* L2：auto trigger，测试用例为全量测试中的一小部分，测试时长在30分钟以内，目的是快速发现CI代码在基本接口功能上面存在的问题，及时推动研发人员解决\n* L3：daily build，全量测试，考察代码在复杂场景下、单个异常下运行情况，测试时间应当在12h以内，测试问题第二天及时反馈RD解决，问题绝不过夜\n* failover：hand trigger，全量回归三轮无异常，版本拉分支进入异常环境，多种异常混合、持续压力、异常预案演练、集群服务能力评估，运行三天无问题，产出测试报告\n* 集成测试：hand trigger upgrade，failover环境三天无问题，版本进入集成环境，版本兼容性测试、上下游模块对接测试，观察三天\n* 性能测试：hand trigger，集成环境三天无异常，开始集群性能测试，观察版本间性能是否存在回退，如存在推动定位调优，产出性能测试报告\n* 自动上线：hand trigger，借助变更平台上线\n* 线上灰度测试：版本上线时触发，代码相对简单，测试需要关注的是平台维护、报警信息补全完善\n\n# 新patch测试须知 #\n\n1. 功能设计阶段：参与设计讨论\n2. 功能开发阶段：与研发功能确认接口，开发对应测试用例，编写测试方案设计文档\n3. 功能提测阶段：review功能实现逻辑，最好能看懂业务逻辑层面的代码，调通新增测试用例，加入回归测试\n4. 功能验收阶段：稳定回归3轮，有问题及时推动解决，问题绝不过夜，及时更新测试进度记录文档\n5. 分支测试阶段：功能验收通过，推入failover环境，有问题及时推动解决，产出测试报告\n6. 集成环境观察阶段：上线集成环境，观察兼容性、联调上下游环境、性能回退，产出测试报告\n7. 最后上线阶段：冒烟测试\n","slug":"分布式存储质量保障体系","published":1,"updated":"2018-05-10T08:19:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh73ilr600071lcaw39b6q0l","content":"<h1 id=\"测试流程\"><a href=\"#测试流程\" class=\"headerlink\" title=\"测试流程\"></a>测试流程</h1><p>代码review  –&gt; UT（L1）–&gt; L2（简单功能测试）–&gt; L3（全量回归测试）–&gt; 异常环境 –&gt; 集成测试 –&gt; 性能测试 –&gt;  自动上线 –&gt; 线上灰度测试</p>\n<h1 id=\"测试流程功能简述\"><a href=\"#测试流程功能简述\" class=\"headerlink\" title=\"测试流程功能简述\"></a>测试流程功能简述</h1><p>代码review：主要是代码规范性检查，coding风格、代码书写合理性（项目高工查），测试人员需要关注log打印是否合理、是否有冗余或缺失、日志级别是否合理</p>\n<ul>\n<li>UT：auto trigger，UT测试代码由研发人员负责编写，测试人员需要维护UT测试环境、推动单测问题解决、推动单测覆盖率提升</li>\n<li>L2：auto trigger，测试用例为全量测试中的一小部分，测试时长在30分钟以内，目的是快速发现CI代码在基本接口功能上面存在的问题，及时推动研发人员解决</li>\n<li>L3：daily build，全量测试，考察代码在复杂场景下、单个异常下运行情况，测试时间应当在12h以内，测试问题第二天及时反馈RD解决，问题绝不过夜</li>\n<li>failover：hand trigger，全量回归三轮无异常，版本拉分支进入异常环境，多种异常混合、持续压力、异常预案演练、集群服务能力评估，运行三天无问题，产出测试报告</li>\n<li>集成测试：hand trigger upgrade，failover环境三天无问题，版本进入集成环境，版本兼容性测试、上下游模块对接测试，观察三天</li>\n<li>性能测试：hand trigger，集成环境三天无异常，开始集群性能测试，观察版本间性能是否存在回退，如存在推动定位调优，产出性能测试报告</li>\n<li>自动上线：hand trigger，借助变更平台上线</li>\n<li>线上灰度测试：版本上线时触发，代码相对简单，测试需要关注的是平台维护、报警信息补全完善</li>\n</ul>\n<h1 id=\"新patch测试须知\"><a href=\"#新patch测试须知\" class=\"headerlink\" title=\"新patch测试须知\"></a>新patch测试须知</h1><ol>\n<li>功能设计阶段：参与设计讨论</li>\n<li>功能开发阶段：与研发功能确认接口，开发对应测试用例，编写测试方案设计文档</li>\n<li>功能提测阶段：review功能实现逻辑，最好能看懂业务逻辑层面的代码，调通新增测试用例，加入回归测试</li>\n<li>功能验收阶段：稳定回归3轮，有问题及时推动解决，问题绝不过夜，及时更新测试进度记录文档</li>\n<li>分支测试阶段：功能验收通过，推入failover环境，有问题及时推动解决，产出测试报告</li>\n<li>集成环境观察阶段：上线集成环境，观察兼容性、联调上下游环境、性能回退，产出测试报告</li>\n<li>最后上线阶段：冒烟测试</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"测试流程\"><a href=\"#测试流程\" class=\"headerlink\" title=\"测试流程\"></a>测试流程</h1><p>代码review  –&gt; UT（L1）–&gt; L2（简单功能测试）–&gt; L3（全量回归测试）–&gt; 异常环境 –&gt; 集成测试 –&gt; 性能测试 –&gt;  自动上线 –&gt; 线上灰度测试</p>\n<h1 id=\"测试流程功能简述\"><a href=\"#测试流程功能简述\" class=\"headerlink\" title=\"测试流程功能简述\"></a>测试流程功能简述</h1><p>代码review：主要是代码规范性检查，coding风格、代码书写合理性（项目高工查），测试人员需要关注log打印是否合理、是否有冗余或缺失、日志级别是否合理</p>\n<ul>\n<li>UT：auto trigger，UT测试代码由研发人员负责编写，测试人员需要维护UT测试环境、推动单测问题解决、推动单测覆盖率提升</li>\n<li>L2：auto trigger，测试用例为全量测试中的一小部分，测试时长在30分钟以内，目的是快速发现CI代码在基本接口功能上面存在的问题，及时推动研发人员解决</li>\n<li>L3：daily build，全量测试，考察代码在复杂场景下、单个异常下运行情况，测试时间应当在12h以内，测试问题第二天及时反馈RD解决，问题绝不过夜</li>\n<li>failover：hand trigger，全量回归三轮无异常，版本拉分支进入异常环境，多种异常混合、持续压力、异常预案演练、集群服务能力评估，运行三天无问题，产出测试报告</li>\n<li>集成测试：hand trigger upgrade，failover环境三天无问题，版本进入集成环境，版本兼容性测试、上下游模块对接测试，观察三天</li>\n<li>性能测试：hand trigger，集成环境三天无异常，开始集群性能测试，观察版本间性能是否存在回退，如存在推动定位调优，产出性能测试报告</li>\n<li>自动上线：hand trigger，借助变更平台上线</li>\n<li>线上灰度测试：版本上线时触发，代码相对简单，测试需要关注的是平台维护、报警信息补全完善</li>\n</ul>\n<h1 id=\"新patch测试须知\"><a href=\"#新patch测试须知\" class=\"headerlink\" title=\"新patch测试须知\"></a>新patch测试须知</h1><ol>\n<li>功能设计阶段：参与设计讨论</li>\n<li>功能开发阶段：与研发功能确认接口，开发对应测试用例，编写测试方案设计文档</li>\n<li>功能提测阶段：review功能实现逻辑，最好能看懂业务逻辑层面的代码，调通新增测试用例，加入回归测试</li>\n<li>功能验收阶段：稳定回归3轮，有问题及时推动解决，问题绝不过夜，及时更新测试进度记录文档</li>\n<li>分支测试阶段：功能验收通过，推入failover环境，有问题及时推动解决，产出测试报告</li>\n<li>集成环境观察阶段：上线集成环境，观察兼容性、联调上下游环境、性能回退，产出测试报告</li>\n<li>最后上线阶段：冒烟测试</li>\n</ol>\n"},{"title":"分布式系统部署工具","type":"categories","copyright":true,"date":"2018-05-05T11:05:53.000Z","_content":"\n\n# 背景 #\n分布式集群搭建通常具体以下几个难点:  \n\n- 具有复杂的机器拓扑结构\n- 配置管理错综复杂\n- 模块之间的启动顺序有着强依赖\n- 模块版本变更由于跨机器十分不便\n- 集群外部系统依赖复杂且难以管理\n\n对于一套可以**简洁易用**的中控式搭建、初始化、变更、监控集群的部署工具有强需求，可以提高小型开发团队在系统迭代阶段的效率\n\n\n# 功能 #\n1. 根据集群拓扑结构的规划自动搭建整套集群\n2. 提供自定义配置、变更配置功能\n3. 自动处理好外部系统依赖的初始化工作，如mysql系统的建库建表\n4. 自动完成本系统的环境初始化工作\n5. 自动生成全集群各模块的启停及状态监控脚本\n\n# 代码结构 #\n代码路径: [https://github.com/ksk0014/distributed-systems-deploy](https://github.com/ksk0014/distributed-systems-deploy)  \n\n下载下来后会有三个目录:\n  \n- conf目录: 模块配置文件, machine.xxx代表集群拓扑结构规划\n- bin目录: 集群部署、升级脚本\n- auto-deploy-cluster: 主运行程序，模板目录\n\n# conf说明 #\n| 文件 | 说明 |\n| :--- | :--- |\n| cluster.conf | 搭建的所有配置,在文件中有详细注释 |\n| diy.conf | 模块自定义配置，端口类的配置可以忽略，此类配置系统会自动分配得出 |\n| machine.xxx | 某个模板需要搭建的机器, 每一行表示一个机器 |\n\n\n# 数据结构 #\n模板数据组织结构如下:\n\n```\ngroup = {\n \"instances\": [\n   &instance1,\n   &instance2\n ]\n}\n\nregion = {\n}#同group\n \n#搭建的某个实例\ninstance = {\n\"name\": str, #唯一标识某个搭建模块的名字\n\"dir_name\": str, #在机器上的部署目录,同一模块在同一机器上部署多个时该值不一样\n\"app_type\": str, #见application中的name\n\"on_machine\": str, #机器名,与machine中的name对应\n\"group\": int, #暂时未用\n\"region\": int, #fileserver 的region标识\n\"idx\": int, #该模块的第几个实例,\n\"idx_in_group\": int, #在group中该实例的index\n\"machine_ref\": &{machine}, #见machine数据结构\n\"application_ref\": &{application}, #见application数据结构\n\"group_ref\": &{group}, #见group数据结构\n\"region_ref\": &{region}, #见region数据结构\n\"idx_in_region\": int, #region中该实例的index\n\"ports\": {\n    \"port_name\": int, #port_name来源于application中的port_name,根据不同的模块而不一样\n    ...\n},\n\"region_name\": str\n}\n\n#固定数据结构,数据中每个元素表示某一个模块,即一个application\napplications = [\n{   #一个application\n    \"name\": \"xxx|yyy|zzz\",\n    \"dir_tmpl\": str, #模板目录,一般不会用到,\n    \"port_names\": [\"xx_port\", \"xx_port\"], #不同的模块的port_name不一样,可查看代码\n    \"idx\": int, #一般不会用到\n    \"instances\": [&instance], #模块的instance列表\n    \"group_with_name\": {\n         \"group_name\": &group, #group_name是一个int值\n          ...\n    },\n    \"region_with_name\":{\n        \"region_name\": &region, #同上\n    },\n    \"groups\": [&group], #group的列表,\n    \"region\": [&region], #region的列表\n},\n{\n...\n}\n]\n \n#搭建的机器信息\nmachines = [\n{\n    \"name\": str, #机器标识,不一定是机器名,与instance中的on_machine对应\n    \"deploy__address\": str, #格式为user_name@machine_host这种格式\n    \"deploy__dest_dir\": str, #在机器上的搭建目录\n    \"ip\": str, #机器ip\n    \"user_name\": str, #机器用户名\n    \"pass\": str, #机器密码\n    \"idx\": int, #机器的index\n    \"instances\": [&instance], #机器上搭建的instance列表\n}\n]\n \n#几个全局变量\nmachine_with_name = {\n    \"name\": &machine,\n    \"name2\": &machine,\n    ...\n}\n \napplication_with_name = {\n    \"name\": &application,\n    ...\n}\n \ngroup_with_name = {\n    \"name\": &group\n}\n \nregion_with_name = {\n    \"name\": &region\n}\n\n```\n\n# 使用 #\n部署集群:\n\n1. 设计拓扑结构\n2. 完成模块配置设定\n3. bin目录下执行 install.sh, 等待集群安装完毕\n\n更新集群:\n\n1. 修改集群配置，及模块配置\n2. bin目录下执行 upgrade.sh module_name, 等待更新完毕\n\n集群中控:  \n\n1. 部署完毕生成shell目录，支持模块级别的启停、存活状态、机器资源耗费的检查 \n\n\n\n\n","source":"_posts/分布式系统部署工具.md","raw":"---\ntitle: 分布式系统部署工具\ntags:\n  - Tools\ntype: categories\ncategories:\n  - 部署工具\ncopyright: true\ndate: 2018-05-05 19:05:53\n---\n\n\n# 背景 #\n分布式集群搭建通常具体以下几个难点:  \n\n- 具有复杂的机器拓扑结构\n- 配置管理错综复杂\n- 模块之间的启动顺序有着强依赖\n- 模块版本变更由于跨机器十分不便\n- 集群外部系统依赖复杂且难以管理\n\n对于一套可以**简洁易用**的中控式搭建、初始化、变更、监控集群的部署工具有强需求，可以提高小型开发团队在系统迭代阶段的效率\n\n\n# 功能 #\n1. 根据集群拓扑结构的规划自动搭建整套集群\n2. 提供自定义配置、变更配置功能\n3. 自动处理好外部系统依赖的初始化工作，如mysql系统的建库建表\n4. 自动完成本系统的环境初始化工作\n5. 自动生成全集群各模块的启停及状态监控脚本\n\n# 代码结构 #\n代码路径: [https://github.com/ksk0014/distributed-systems-deploy](https://github.com/ksk0014/distributed-systems-deploy)  \n\n下载下来后会有三个目录:\n  \n- conf目录: 模块配置文件, machine.xxx代表集群拓扑结构规划\n- bin目录: 集群部署、升级脚本\n- auto-deploy-cluster: 主运行程序，模板目录\n\n# conf说明 #\n| 文件 | 说明 |\n| :--- | :--- |\n| cluster.conf | 搭建的所有配置,在文件中有详细注释 |\n| diy.conf | 模块自定义配置，端口类的配置可以忽略，此类配置系统会自动分配得出 |\n| machine.xxx | 某个模板需要搭建的机器, 每一行表示一个机器 |\n\n\n# 数据结构 #\n模板数据组织结构如下:\n\n```\ngroup = {\n \"instances\": [\n   &instance1,\n   &instance2\n ]\n}\n\nregion = {\n}#同group\n \n#搭建的某个实例\ninstance = {\n\"name\": str, #唯一标识某个搭建模块的名字\n\"dir_name\": str, #在机器上的部署目录,同一模块在同一机器上部署多个时该值不一样\n\"app_type\": str, #见application中的name\n\"on_machine\": str, #机器名,与machine中的name对应\n\"group\": int, #暂时未用\n\"region\": int, #fileserver 的region标识\n\"idx\": int, #该模块的第几个实例,\n\"idx_in_group\": int, #在group中该实例的index\n\"machine_ref\": &{machine}, #见machine数据结构\n\"application_ref\": &{application}, #见application数据结构\n\"group_ref\": &{group}, #见group数据结构\n\"region_ref\": &{region}, #见region数据结构\n\"idx_in_region\": int, #region中该实例的index\n\"ports\": {\n    \"port_name\": int, #port_name来源于application中的port_name,根据不同的模块而不一样\n    ...\n},\n\"region_name\": str\n}\n\n#固定数据结构,数据中每个元素表示某一个模块,即一个application\napplications = [\n{   #一个application\n    \"name\": \"xxx|yyy|zzz\",\n    \"dir_tmpl\": str, #模板目录,一般不会用到,\n    \"port_names\": [\"xx_port\", \"xx_port\"], #不同的模块的port_name不一样,可查看代码\n    \"idx\": int, #一般不会用到\n    \"instances\": [&instance], #模块的instance列表\n    \"group_with_name\": {\n         \"group_name\": &group, #group_name是一个int值\n          ...\n    },\n    \"region_with_name\":{\n        \"region_name\": &region, #同上\n    },\n    \"groups\": [&group], #group的列表,\n    \"region\": [&region], #region的列表\n},\n{\n...\n}\n]\n \n#搭建的机器信息\nmachines = [\n{\n    \"name\": str, #机器标识,不一定是机器名,与instance中的on_machine对应\n    \"deploy__address\": str, #格式为user_name@machine_host这种格式\n    \"deploy__dest_dir\": str, #在机器上的搭建目录\n    \"ip\": str, #机器ip\n    \"user_name\": str, #机器用户名\n    \"pass\": str, #机器密码\n    \"idx\": int, #机器的index\n    \"instances\": [&instance], #机器上搭建的instance列表\n}\n]\n \n#几个全局变量\nmachine_with_name = {\n    \"name\": &machine,\n    \"name2\": &machine,\n    ...\n}\n \napplication_with_name = {\n    \"name\": &application,\n    ...\n}\n \ngroup_with_name = {\n    \"name\": &group\n}\n \nregion_with_name = {\n    \"name\": &region\n}\n\n```\n\n# 使用 #\n部署集群:\n\n1. 设计拓扑结构\n2. 完成模块配置设定\n3. bin目录下执行 install.sh, 等待集群安装完毕\n\n更新集群:\n\n1. 修改集群配置，及模块配置\n2. bin目录下执行 upgrade.sh module_name, 等待更新完毕\n\n集群中控:  \n\n1. 部署完毕生成shell目录，支持模块级别的启停、存活状态、机器资源耗费的检查 \n\n\n\n\n","slug":"分布式系统部署工具","published":1,"updated":"2018-05-10T08:19:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh73ilr800081lcamzo606fx","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>分布式集群搭建通常具体以下几个难点:  </p>\n<ul>\n<li>具有复杂的机器拓扑结构</li>\n<li>配置管理错综复杂</li>\n<li>模块之间的启动顺序有着强依赖</li>\n<li>模块版本变更由于跨机器十分不便</li>\n<li>集群外部系统依赖复杂且难以管理</li>\n</ul>\n<p>对于一套可以<strong>简洁易用</strong>的中控式搭建、初始化、变更、监控集群的部署工具有强需求，可以提高小型开发团队在系统迭代阶段的效率</p>\n<h1 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h1><ol>\n<li>根据集群拓扑结构的规划自动搭建整套集群</li>\n<li>提供自定义配置、变更配置功能</li>\n<li>自动处理好外部系统依赖的初始化工作，如mysql系统的建库建表</li>\n<li>自动完成本系统的环境初始化工作</li>\n<li>自动生成全集群各模块的启停及状态监控脚本</li>\n</ol>\n<h1 id=\"代码结构\"><a href=\"#代码结构\" class=\"headerlink\" title=\"代码结构\"></a>代码结构</h1><p>代码路径: <a href=\"https://github.com/ksk0014/distributed-systems-deploy\" target=\"_blank\" rel=\"noopener\">https://github.com/ksk0014/distributed-systems-deploy</a>  </p>\n<p>下载下来后会有三个目录:</p>\n<ul>\n<li>conf目录: 模块配置文件, machine.xxx代表集群拓扑结构规划</li>\n<li>bin目录: 集群部署、升级脚本</li>\n<li>auto-deploy-cluster: 主运行程序，模板目录</li>\n</ul>\n<h1 id=\"conf说明\"><a href=\"#conf说明\" class=\"headerlink\" title=\"conf说明\"></a>conf说明</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">文件</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">cluster.conf</td>\n<td style=\"text-align:left\">搭建的所有配置,在文件中有详细注释</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">diy.conf</td>\n<td style=\"text-align:left\">模块自定义配置，端口类的配置可以忽略，此类配置系统会自动分配得出</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">machine.xxx</td>\n<td style=\"text-align:left\">某个模板需要搭建的机器, 每一行表示一个机器</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h1><p>模板数据组织结构如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">group = &#123;</span><br><span class=\"line\"> &quot;instances&quot;: [</span><br><span class=\"line\">   &amp;instance1,</span><br><span class=\"line\">   &amp;instance2</span><br><span class=\"line\"> ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">region = &#123;</span><br><span class=\"line\">&#125;#同group</span><br><span class=\"line\"> </span><br><span class=\"line\">#搭建的某个实例</span><br><span class=\"line\">instance = &#123;</span><br><span class=\"line\">&quot;name&quot;: str, #唯一标识某个搭建模块的名字</span><br><span class=\"line\">&quot;dir_name&quot;: str, #在机器上的部署目录,同一模块在同一机器上部署多个时该值不一样</span><br><span class=\"line\">&quot;app_type&quot;: str, #见application中的name</span><br><span class=\"line\">&quot;on_machine&quot;: str, #机器名,与machine中的name对应</span><br><span class=\"line\">&quot;group&quot;: int, #暂时未用</span><br><span class=\"line\">&quot;region&quot;: int, #fileserver 的region标识</span><br><span class=\"line\">&quot;idx&quot;: int, #该模块的第几个实例,</span><br><span class=\"line\">&quot;idx_in_group&quot;: int, #在group中该实例的index</span><br><span class=\"line\">&quot;machine_ref&quot;: &amp;&#123;machine&#125;, #见machine数据结构</span><br><span class=\"line\">&quot;application_ref&quot;: &amp;&#123;application&#125;, #见application数据结构</span><br><span class=\"line\">&quot;group_ref&quot;: &amp;&#123;group&#125;, #见group数据结构</span><br><span class=\"line\">&quot;region_ref&quot;: &amp;&#123;region&#125;, #见region数据结构</span><br><span class=\"line\">&quot;idx_in_region&quot;: int, #region中该实例的index</span><br><span class=\"line\">&quot;ports&quot;: &#123;</span><br><span class=\"line\">    &quot;port_name&quot;: int, #port_name来源于application中的port_name,根据不同的模块而不一样</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&quot;region_name&quot;: str</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#固定数据结构,数据中每个元素表示某一个模块,即一个application</span><br><span class=\"line\">applications = [</span><br><span class=\"line\">&#123;   #一个application</span><br><span class=\"line\">    &quot;name&quot;: &quot;xxx|yyy|zzz&quot;,</span><br><span class=\"line\">    &quot;dir_tmpl&quot;: str, #模板目录,一般不会用到,</span><br><span class=\"line\">    &quot;port_names&quot;: [&quot;xx_port&quot;, &quot;xx_port&quot;], #不同的模块的port_name不一样,可查看代码</span><br><span class=\"line\">    &quot;idx&quot;: int, #一般不会用到</span><br><span class=\"line\">    &quot;instances&quot;: [&amp;instance], #模块的instance列表</span><br><span class=\"line\">    &quot;group_with_name&quot;: &#123;</span><br><span class=\"line\">         &quot;group_name&quot;: &amp;group, #group_name是一个int值</span><br><span class=\"line\">          ...</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;region_with_name&quot;:&#123;</span><br><span class=\"line\">        &quot;region_name&quot;: &amp;region, #同上</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;groups&quot;: [&amp;group], #group的列表,</span><br><span class=\"line\">    &quot;region&quot;: [&amp;region], #region的列表</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"> </span><br><span class=\"line\">#搭建的机器信息</span><br><span class=\"line\">machines = [</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;name&quot;: str, #机器标识,不一定是机器名,与instance中的on_machine对应</span><br><span class=\"line\">    &quot;deploy__address&quot;: str, #格式为user_name@machine_host这种格式</span><br><span class=\"line\">    &quot;deploy__dest_dir&quot;: str, #在机器上的搭建目录</span><br><span class=\"line\">    &quot;ip&quot;: str, #机器ip</span><br><span class=\"line\">    &quot;user_name&quot;: str, #机器用户名</span><br><span class=\"line\">    &quot;pass&quot;: str, #机器密码</span><br><span class=\"line\">    &quot;idx&quot;: int, #机器的index</span><br><span class=\"line\">    &quot;instances&quot;: [&amp;instance], #机器上搭建的instance列表</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"> </span><br><span class=\"line\">#几个全局变量</span><br><span class=\"line\">machine_with_name = &#123;</span><br><span class=\"line\">    &quot;name&quot;: &amp;machine,</span><br><span class=\"line\">    &quot;name2&quot;: &amp;machine,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">application_with_name = &#123;</span><br><span class=\"line\">    &quot;name&quot;: &amp;application,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">group_with_name = &#123;</span><br><span class=\"line\">    &quot;name&quot;: &amp;group</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">region_with_name = &#123;</span><br><span class=\"line\">    &quot;name&quot;: &amp;region</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>部署集群:</p>\n<ol>\n<li>设计拓扑结构</li>\n<li>完成模块配置设定</li>\n<li>bin目录下执行 install.sh, 等待集群安装完毕</li>\n</ol>\n<p>更新集群:</p>\n<ol>\n<li>修改集群配置，及模块配置</li>\n<li>bin目录下执行 upgrade.sh module_name, 等待更新完毕</li>\n</ol>\n<p>集群中控:  </p>\n<ol>\n<li>部署完毕生成shell目录，支持模块级别的启停、存活状态、机器资源耗费的检查 </li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>分布式集群搭建通常具体以下几个难点:  </p>\n<ul>\n<li>具有复杂的机器拓扑结构</li>\n<li>配置管理错综复杂</li>\n<li>模块之间的启动顺序有着强依赖</li>\n<li>模块版本变更由于跨机器十分不便</li>\n<li>集群外部系统依赖复杂且难以管理</li>\n</ul>\n<p>对于一套可以<strong>简洁易用</strong>的中控式搭建、初始化、变更、监控集群的部署工具有强需求，可以提高小型开发团队在系统迭代阶段的效率</p>\n<h1 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h1><ol>\n<li>根据集群拓扑结构的规划自动搭建整套集群</li>\n<li>提供自定义配置、变更配置功能</li>\n<li>自动处理好外部系统依赖的初始化工作，如mysql系统的建库建表</li>\n<li>自动完成本系统的环境初始化工作</li>\n<li>自动生成全集群各模块的启停及状态监控脚本</li>\n</ol>\n<h1 id=\"代码结构\"><a href=\"#代码结构\" class=\"headerlink\" title=\"代码结构\"></a>代码结构</h1><p>代码路径: <a href=\"https://github.com/ksk0014/distributed-systems-deploy\" target=\"_blank\" rel=\"noopener\">https://github.com/ksk0014/distributed-systems-deploy</a>  </p>\n<p>下载下来后会有三个目录:</p>\n<ul>\n<li>conf目录: 模块配置文件, machine.xxx代表集群拓扑结构规划</li>\n<li>bin目录: 集群部署、升级脚本</li>\n<li>auto-deploy-cluster: 主运行程序，模板目录</li>\n</ul>\n<h1 id=\"conf说明\"><a href=\"#conf说明\" class=\"headerlink\" title=\"conf说明\"></a>conf说明</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">文件</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">cluster.conf</td>\n<td style=\"text-align:left\">搭建的所有配置,在文件中有详细注释</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">diy.conf</td>\n<td style=\"text-align:left\">模块自定义配置，端口类的配置可以忽略，此类配置系统会自动分配得出</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">machine.xxx</td>\n<td style=\"text-align:left\">某个模板需要搭建的机器, 每一行表示一个机器</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h1><p>模板数据组织结构如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">group = &#123;</span><br><span class=\"line\"> &quot;instances&quot;: [</span><br><span class=\"line\">   &amp;instance1,</span><br><span class=\"line\">   &amp;instance2</span><br><span class=\"line\"> ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">region = &#123;</span><br><span class=\"line\">&#125;#同group</span><br><span class=\"line\"> </span><br><span class=\"line\">#搭建的某个实例</span><br><span class=\"line\">instance = &#123;</span><br><span class=\"line\">&quot;name&quot;: str, #唯一标识某个搭建模块的名字</span><br><span class=\"line\">&quot;dir_name&quot;: str, #在机器上的部署目录,同一模块在同一机器上部署多个时该值不一样</span><br><span class=\"line\">&quot;app_type&quot;: str, #见application中的name</span><br><span class=\"line\">&quot;on_machine&quot;: str, #机器名,与machine中的name对应</span><br><span class=\"line\">&quot;group&quot;: int, #暂时未用</span><br><span class=\"line\">&quot;region&quot;: int, #fileserver 的region标识</span><br><span class=\"line\">&quot;idx&quot;: int, #该模块的第几个实例,</span><br><span class=\"line\">&quot;idx_in_group&quot;: int, #在group中该实例的index</span><br><span class=\"line\">&quot;machine_ref&quot;: &amp;&#123;machine&#125;, #见machine数据结构</span><br><span class=\"line\">&quot;application_ref&quot;: &amp;&#123;application&#125;, #见application数据结构</span><br><span class=\"line\">&quot;group_ref&quot;: &amp;&#123;group&#125;, #见group数据结构</span><br><span class=\"line\">&quot;region_ref&quot;: &amp;&#123;region&#125;, #见region数据结构</span><br><span class=\"line\">&quot;idx_in_region&quot;: int, #region中该实例的index</span><br><span class=\"line\">&quot;ports&quot;: &#123;</span><br><span class=\"line\">    &quot;port_name&quot;: int, #port_name来源于application中的port_name,根据不同的模块而不一样</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&quot;region_name&quot;: str</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#固定数据结构,数据中每个元素表示某一个模块,即一个application</span><br><span class=\"line\">applications = [</span><br><span class=\"line\">&#123;   #一个application</span><br><span class=\"line\">    &quot;name&quot;: &quot;xxx|yyy|zzz&quot;,</span><br><span class=\"line\">    &quot;dir_tmpl&quot;: str, #模板目录,一般不会用到,</span><br><span class=\"line\">    &quot;port_names&quot;: [&quot;xx_port&quot;, &quot;xx_port&quot;], #不同的模块的port_name不一样,可查看代码</span><br><span class=\"line\">    &quot;idx&quot;: int, #一般不会用到</span><br><span class=\"line\">    &quot;instances&quot;: [&amp;instance], #模块的instance列表</span><br><span class=\"line\">    &quot;group_with_name&quot;: &#123;</span><br><span class=\"line\">         &quot;group_name&quot;: &amp;group, #group_name是一个int值</span><br><span class=\"line\">          ...</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;region_with_name&quot;:&#123;</span><br><span class=\"line\">        &quot;region_name&quot;: &amp;region, #同上</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;groups&quot;: [&amp;group], #group的列表,</span><br><span class=\"line\">    &quot;region&quot;: [&amp;region], #region的列表</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"> </span><br><span class=\"line\">#搭建的机器信息</span><br><span class=\"line\">machines = [</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;name&quot;: str, #机器标识,不一定是机器名,与instance中的on_machine对应</span><br><span class=\"line\">    &quot;deploy__address&quot;: str, #格式为user_name@machine_host这种格式</span><br><span class=\"line\">    &quot;deploy__dest_dir&quot;: str, #在机器上的搭建目录</span><br><span class=\"line\">    &quot;ip&quot;: str, #机器ip</span><br><span class=\"line\">    &quot;user_name&quot;: str, #机器用户名</span><br><span class=\"line\">    &quot;pass&quot;: str, #机器密码</span><br><span class=\"line\">    &quot;idx&quot;: int, #机器的index</span><br><span class=\"line\">    &quot;instances&quot;: [&amp;instance], #机器上搭建的instance列表</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"> </span><br><span class=\"line\">#几个全局变量</span><br><span class=\"line\">machine_with_name = &#123;</span><br><span class=\"line\">    &quot;name&quot;: &amp;machine,</span><br><span class=\"line\">    &quot;name2&quot;: &amp;machine,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">application_with_name = &#123;</span><br><span class=\"line\">    &quot;name&quot;: &amp;application,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">group_with_name = &#123;</span><br><span class=\"line\">    &quot;name&quot;: &amp;group</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">region_with_name = &#123;</span><br><span class=\"line\">    &quot;name&quot;: &amp;region</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>部署集群:</p>\n<ol>\n<li>设计拓扑结构</li>\n<li>完成模块配置设定</li>\n<li>bin目录下执行 install.sh, 等待集群安装完毕</li>\n</ol>\n<p>更新集群:</p>\n<ol>\n<li>修改集群配置，及模块配置</li>\n<li>bin目录下执行 upgrade.sh module_name, 等待更新完毕</li>\n</ol>\n<p>集群中控:  </p>\n<ol>\n<li>部署完毕生成shell目录，支持模块级别的启停、存活状态、机器资源耗费的检查 </li>\n</ol>\n"},{"title":"块存储性能测试","date":"2018-05-04T11:37:02.000Z","_content":"\n## 业务需求 ##\n\n块存储服务推出后，需要针对各种产品宣称性能做基准性能评估。存储领域中性能评估指标主要分为三类IOPS、throughput、latency\n\n目前业界对于块存储的产品划分情况如下:\n\n|  产品类型      | 性能特点 |  应用场景  |  主流厂商支持情况  |\n| :-------      | :---- | :--- | :---- |\n| near local    | >= 本地ssd盘性能 | 大型OLTP数据库/NoSQL数据库/ELK分布式日志 | 阿里云ESSD |\n| SSD云盘 |  20000IOPS左右 | I/O密集型应用/中型关系数据库/NoSQL数据库 | 主流厂商均支持 |\n| 高效云盘 |  性能够用就好，5000IOPS左右 | 开发与测试业务/小型负载数据库/系统盘 | 主流厂商均支持 |\n| 普通云盘 |  sata介质，吞吐优化型500MBps，冷存储250MBps以下 | 大数据/数据仓库/日志处理 | aws划分更细致，阿里云已淘汰 |\n\n## 分层测试框架 ##\n\n分布式块存储性能测试考量需要覆盖以下的层次:\n\n1. 系统网络性能、物理磁盘性能测试\n2. 存储核心系统读写性能测试，stress_tool、data_consistency_tool\n3. 宿主机上云盘性能、以及虚拟机上的云盘性能，PTS测试模型，fio\n4. 设备上文件系统性能测试，filebench，iozone等等\n5. 实际应用负载测试，sysbench OLTP、分布式数据分析框架IO负载仿真\n6. 用户常用操作的易用性\n\n块存储性能测试需要从两个视角看：\n\n* 用户维度：针对系统中单一卷实例可以获得稳定且可预期的性能，更多关注上述3 ~ 6的测试层次，本文主要讲解第3个层次的测试设计\n* 集群维度：针对集群可服务能力的性能评估，保障系统整体稳定可控，更多关注上述1 ~ 2的测试层次\n\n## PTS测试模型 ##\n**PTS：** Solid State Storage Performance Test Specification \nSNIA固态存储性能测试标准，相关文档参见 [SSS_PTS_2.0.1.pdf](https://www.snia.org/sites/default/files/technical_work/PTS/SSS_PTS_2.0.1.pdf)\n\n本文测试设计主要参考上述文档，并针对云环境做了相应适配\n\n### 测试步骤 ###\n\n根据 PTS 规范，SSD 性能测试需要经过以下四个步骤：\n\n1. 净化（purge）：通过擦除数据，将 SSD 置于接近 FOB 状态。\n2. 事先准备工作负载（WIPC）：写入规定的数据到整个 SSD，帮助其达到稳态。\n3. 正式测试之前的准备工作（WDPC）：循环运行测试，直到 SSD 进入稳态。\n4. 测试：当 SSD 进入稳态时开始测试。\n\n备注:\n\n*FOB:* Fresh of Box，新鲜出盒，即硬盘刚买来的状态  \n*稳态:* 性能波动范围小于预先设定的阈值\n \n\n### 测试项 ###\n#### IOPS测试 ####\n测试在不同block size与不同的read/write 比的混合下随机IO的性能  \nblock size：100/0, 95/5, 65/35, 50/50, 35/65, 5/95, 0/100  \nread/write：1024KiB, 128KiB, 64KiB, 32KiB, 16KiB, 8KiB, 4KiB, 0.5KiB   \n磁盘IO的范围：100% volume size\n\n（1）purge  \n（2）WIPC：128k顺序写2倍的磁盘空间  \n（3）WDPC：上述工作负载（bs，r/w） loop运行  \n（4）稳态判定：取相邻4轮的4kb 随机 0/100的iops，相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口\n\n测试数据，取稳态窗口的均值\n\n#### Throughput测试 ####\n测试在稳态的128k与1m的顺序读与顺序写的吞吐  \n磁盘IO的范围：100% volume size\n\n（1）purge  \n（2）WIPC：128k顺序写或1M的顺序写2倍的磁盘空间  \n（3）WDPC：bs(128k,1M)和rw(100/0, 0/100) 顺序IO，loop，记录吞吐量  \n（4）稳态判定：取相邻4轮的吞吐，相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口\n\n测试数据，取稳态窗口的均值\n\n#### 延迟测试 ####\n\n测试在3种block sizes（0.5k，4k和8k），与三种读/写 比（100/0，65/35，0/100）混合下IO响应时间  \n磁盘IO的范围：100% volume size\n\n（1）purge  \n（2）WIPC：128k顺序写2倍的磁盘空间  \n（3）WDPC：bs(0.5k, 4k, 8k)和rw(100/0,  65/35, 0/100) 随机IO，loop，记录最大延迟与平均延迟  \n（4）稳态判定：取相邻4轮的平均延迟（0/100，4k），相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口\n\n测试数据，取稳态窗口的均值\n\n#### 稳定性测试 ####\n\n测试SSD性能是随着时间以及写入量的增加是如何变化的（1min的检测穿插着30分钟的WAST测试）\n\n（1）purge  \n（2）4k的随机写（100%），持续写入达到4倍的磁盘大小或者达到24h或者达到5轮的稳态（满足其一即可）  \n（3）iostat统计磁盘读写性能数据，取fio延迟波动方差的数据\n\n## 测试工具 ##\n\n代码路径: [https://github.com/ksk0014/block-storage-benchamrk](https://github.com/ksk0014/block-storage-benchamrk)\n\n## 效果展示 ##\n\n测试结果保存在文件中，格式如下图:\n\n![性能测试结果](块存储性能测试/perf_tool_result.jpeg)\n\n","source":"_posts/块存储性能测试.md","raw":"---\ntitle: 块存储性能测试\ndate: 2018-05-04 19:37:02\ntags:\n- Testing Phase\ncategories:\n- 测试设计\n---\n\n## 业务需求 ##\n\n块存储服务推出后，需要针对各种产品宣称性能做基准性能评估。存储领域中性能评估指标主要分为三类IOPS、throughput、latency\n\n目前业界对于块存储的产品划分情况如下:\n\n|  产品类型      | 性能特点 |  应用场景  |  主流厂商支持情况  |\n| :-------      | :---- | :--- | :---- |\n| near local    | >= 本地ssd盘性能 | 大型OLTP数据库/NoSQL数据库/ELK分布式日志 | 阿里云ESSD |\n| SSD云盘 |  20000IOPS左右 | I/O密集型应用/中型关系数据库/NoSQL数据库 | 主流厂商均支持 |\n| 高效云盘 |  性能够用就好，5000IOPS左右 | 开发与测试业务/小型负载数据库/系统盘 | 主流厂商均支持 |\n| 普通云盘 |  sata介质，吞吐优化型500MBps，冷存储250MBps以下 | 大数据/数据仓库/日志处理 | aws划分更细致，阿里云已淘汰 |\n\n## 分层测试框架 ##\n\n分布式块存储性能测试考量需要覆盖以下的层次:\n\n1. 系统网络性能、物理磁盘性能测试\n2. 存储核心系统读写性能测试，stress_tool、data_consistency_tool\n3. 宿主机上云盘性能、以及虚拟机上的云盘性能，PTS测试模型，fio\n4. 设备上文件系统性能测试，filebench，iozone等等\n5. 实际应用负载测试，sysbench OLTP、分布式数据分析框架IO负载仿真\n6. 用户常用操作的易用性\n\n块存储性能测试需要从两个视角看：\n\n* 用户维度：针对系统中单一卷实例可以获得稳定且可预期的性能，更多关注上述3 ~ 6的测试层次，本文主要讲解第3个层次的测试设计\n* 集群维度：针对集群可服务能力的性能评估，保障系统整体稳定可控，更多关注上述1 ~ 2的测试层次\n\n## PTS测试模型 ##\n**PTS：** Solid State Storage Performance Test Specification \nSNIA固态存储性能测试标准，相关文档参见 [SSS_PTS_2.0.1.pdf](https://www.snia.org/sites/default/files/technical_work/PTS/SSS_PTS_2.0.1.pdf)\n\n本文测试设计主要参考上述文档，并针对云环境做了相应适配\n\n### 测试步骤 ###\n\n根据 PTS 规范，SSD 性能测试需要经过以下四个步骤：\n\n1. 净化（purge）：通过擦除数据，将 SSD 置于接近 FOB 状态。\n2. 事先准备工作负载（WIPC）：写入规定的数据到整个 SSD，帮助其达到稳态。\n3. 正式测试之前的准备工作（WDPC）：循环运行测试，直到 SSD 进入稳态。\n4. 测试：当 SSD 进入稳态时开始测试。\n\n备注:\n\n*FOB:* Fresh of Box，新鲜出盒，即硬盘刚买来的状态  \n*稳态:* 性能波动范围小于预先设定的阈值\n \n\n### 测试项 ###\n#### IOPS测试 ####\n测试在不同block size与不同的read/write 比的混合下随机IO的性能  \nblock size：100/0, 95/5, 65/35, 50/50, 35/65, 5/95, 0/100  \nread/write：1024KiB, 128KiB, 64KiB, 32KiB, 16KiB, 8KiB, 4KiB, 0.5KiB   \n磁盘IO的范围：100% volume size\n\n（1）purge  \n（2）WIPC：128k顺序写2倍的磁盘空间  \n（3）WDPC：上述工作负载（bs，r/w） loop运行  \n（4）稳态判定：取相邻4轮的4kb 随机 0/100的iops，相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口\n\n测试数据，取稳态窗口的均值\n\n#### Throughput测试 ####\n测试在稳态的128k与1m的顺序读与顺序写的吞吐  \n磁盘IO的范围：100% volume size\n\n（1）purge  \n（2）WIPC：128k顺序写或1M的顺序写2倍的磁盘空间  \n（3）WDPC：bs(128k,1M)和rw(100/0, 0/100) 顺序IO，loop，记录吞吐量  \n（4）稳态判定：取相邻4轮的吞吐，相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口\n\n测试数据，取稳态窗口的均值\n\n#### 延迟测试 ####\n\n测试在3种block sizes（0.5k，4k和8k），与三种读/写 比（100/0，65/35，0/100）混合下IO响应时间  \n磁盘IO的范围：100% volume size\n\n（1）purge  \n（2）WIPC：128k顺序写2倍的磁盘空间  \n（3）WDPC：bs(0.5k, 4k, 8k)和rw(100/0,  65/35, 0/100) 随机IO，loop，记录最大延迟与平均延迟  \n（4）稳态判定：取相邻4轮的平均延迟（0/100，4k），相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口\n\n测试数据，取稳态窗口的均值\n\n#### 稳定性测试 ####\n\n测试SSD性能是随着时间以及写入量的增加是如何变化的（1min的检测穿插着30分钟的WAST测试）\n\n（1）purge  \n（2）4k的随机写（100%），持续写入达到4倍的磁盘大小或者达到24h或者达到5轮的稳态（满足其一即可）  \n（3）iostat统计磁盘读写性能数据，取fio延迟波动方差的数据\n\n## 测试工具 ##\n\n代码路径: [https://github.com/ksk0014/block-storage-benchamrk](https://github.com/ksk0014/block-storage-benchamrk)\n\n## 效果展示 ##\n\n测试结果保存在文件中，格式如下图:\n\n![性能测试结果](块存储性能测试/perf_tool_result.jpeg)\n\n","slug":"块存储性能测试","published":1,"updated":"2018-05-10T08:19:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh73ilra000c1lcalnr5tabg","content":"<h2 id=\"业务需求\"><a href=\"#业务需求\" class=\"headerlink\" title=\"业务需求\"></a>业务需求</h2><p>块存储服务推出后，需要针对各种产品宣称性能做基准性能评估。存储领域中性能评估指标主要分为三类IOPS、throughput、latency</p>\n<p>目前业界对于块存储的产品划分情况如下:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">产品类型</th>\n<th style=\"text-align:left\">性能特点</th>\n<th style=\"text-align:left\">应用场景</th>\n<th style=\"text-align:left\">主流厂商支持情况</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">near local</td>\n<td style=\"text-align:left\">&gt;= 本地ssd盘性能</td>\n<td style=\"text-align:left\">大型OLTP数据库/NoSQL数据库/ELK分布式日志</td>\n<td style=\"text-align:left\">阿里云ESSD</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SSD云盘</td>\n<td style=\"text-align:left\">20000IOPS左右</td>\n<td style=\"text-align:left\">I/O密集型应用/中型关系数据库/NoSQL数据库</td>\n<td style=\"text-align:left\">主流厂商均支持</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">高效云盘</td>\n<td style=\"text-align:left\">性能够用就好，5000IOPS左右</td>\n<td style=\"text-align:left\">开发与测试业务/小型负载数据库/系统盘</td>\n<td style=\"text-align:left\">主流厂商均支持</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">普通云盘</td>\n<td style=\"text-align:left\">sata介质，吞吐优化型500MBps，冷存储250MBps以下</td>\n<td style=\"text-align:left\">大数据/数据仓库/日志处理</td>\n<td style=\"text-align:left\">aws划分更细致，阿里云已淘汰</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"分层测试框架\"><a href=\"#分层测试框架\" class=\"headerlink\" title=\"分层测试框架\"></a>分层测试框架</h2><p>分布式块存储性能测试考量需要覆盖以下的层次:</p>\n<ol>\n<li>系统网络性能、物理磁盘性能测试</li>\n<li>存储核心系统读写性能测试，stress_tool、data_consistency_tool</li>\n<li>宿主机上云盘性能、以及虚拟机上的云盘性能，PTS测试模型，fio</li>\n<li>设备上文件系统性能测试，filebench，iozone等等</li>\n<li>实际应用负载测试，sysbench OLTP、分布式数据分析框架IO负载仿真</li>\n<li>用户常用操作的易用性</li>\n</ol>\n<p>块存储性能测试需要从两个视角看：</p>\n<ul>\n<li>用户维度：针对系统中单一卷实例可以获得稳定且可预期的性能，更多关注上述3 ~ 6的测试层次，本文主要讲解第3个层次的测试设计</li>\n<li>集群维度：针对集群可服务能力的性能评估，保障系统整体稳定可控，更多关注上述1 ~ 2的测试层次</li>\n</ul>\n<h2 id=\"PTS测试模型\"><a href=\"#PTS测试模型\" class=\"headerlink\" title=\"PTS测试模型\"></a>PTS测试模型</h2><p><strong>PTS：</strong> Solid State Storage Performance Test Specification<br>SNIA固态存储性能测试标准，相关文档参见 <a href=\"https://www.snia.org/sites/default/files/technical_work/PTS/SSS_PTS_2.0.1.pdf\" target=\"_blank\" rel=\"noopener\">SSS_PTS_2.0.1.pdf</a></p>\n<p>本文测试设计主要参考上述文档，并针对云环境做了相应适配</p>\n<h3 id=\"测试步骤\"><a href=\"#测试步骤\" class=\"headerlink\" title=\"测试步骤\"></a>测试步骤</h3><p>根据 PTS 规范，SSD 性能测试需要经过以下四个步骤：</p>\n<ol>\n<li>净化（purge）：通过擦除数据，将 SSD 置于接近 FOB 状态。</li>\n<li>事先准备工作负载（WIPC）：写入规定的数据到整个 SSD，帮助其达到稳态。</li>\n<li>正式测试之前的准备工作（WDPC）：循环运行测试，直到 SSD 进入稳态。</li>\n<li>测试：当 SSD 进入稳态时开始测试。</li>\n</ol>\n<p>备注:</p>\n<p><em>FOB:</em> Fresh of Box，新鲜出盒，即硬盘刚买来的状态<br><em>稳态:</em> 性能波动范围小于预先设定的阈值</p>\n<h3 id=\"测试项\"><a href=\"#测试项\" class=\"headerlink\" title=\"测试项\"></a>测试项</h3><h4 id=\"IOPS测试\"><a href=\"#IOPS测试\" class=\"headerlink\" title=\"IOPS测试\"></a>IOPS测试</h4><p>测试在不同block size与不同的read/write 比的混合下随机IO的性能<br>block size：100/0, 95/5, 65/35, 50/50, 35/65, 5/95, 0/100<br>read/write：1024KiB, 128KiB, 64KiB, 32KiB, 16KiB, 8KiB, 4KiB, 0.5KiB<br>磁盘IO的范围：100% volume size</p>\n<p>（1）purge<br>（2）WIPC：128k顺序写2倍的磁盘空间<br>（3）WDPC：上述工作负载（bs，r/w） loop运行<br>（4）稳态判定：取相邻4轮的4kb 随机 0/100的iops，相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口</p>\n<p>测试数据，取稳态窗口的均值</p>\n<h4 id=\"Throughput测试\"><a href=\"#Throughput测试\" class=\"headerlink\" title=\"Throughput测试\"></a>Throughput测试</h4><p>测试在稳态的128k与1m的顺序读与顺序写的吞吐<br>磁盘IO的范围：100% volume size</p>\n<p>（1）purge<br>（2）WIPC：128k顺序写或1M的顺序写2倍的磁盘空间<br>（3）WDPC：bs(128k,1M)和rw(100/0, 0/100) 顺序IO，loop，记录吞吐量<br>（4）稳态判定：取相邻4轮的吞吐，相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口</p>\n<p>测试数据，取稳态窗口的均值</p>\n<h4 id=\"延迟测试\"><a href=\"#延迟测试\" class=\"headerlink\" title=\"延迟测试\"></a>延迟测试</h4><p>测试在3种block sizes（0.5k，4k和8k），与三种读/写 比（100/0，65/35，0/100）混合下IO响应时间<br>磁盘IO的范围：100% volume size</p>\n<p>（1）purge<br>（2）WIPC：128k顺序写2倍的磁盘空间<br>（3）WDPC：bs(0.5k, 4k, 8k)和rw(100/0,  65/35, 0/100) 随机IO，loop，记录最大延迟与平均延迟<br>（4）稳态判定：取相邻4轮的平均延迟（0/100，4k），相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口</p>\n<p>测试数据，取稳态窗口的均值</p>\n<h4 id=\"稳定性测试\"><a href=\"#稳定性测试\" class=\"headerlink\" title=\"稳定性测试\"></a>稳定性测试</h4><p>测试SSD性能是随着时间以及写入量的增加是如何变化的（1min的检测穿插着30分钟的WAST测试）</p>\n<p>（1）purge<br>（2）4k的随机写（100%），持续写入达到4倍的磁盘大小或者达到24h或者达到5轮的稳态（满足其一即可）<br>（3）iostat统计磁盘读写性能数据，取fio延迟波动方差的数据</p>\n<h2 id=\"测试工具\"><a href=\"#测试工具\" class=\"headerlink\" title=\"测试工具\"></a>测试工具</h2><p>代码路径: <a href=\"https://github.com/ksk0014/block-storage-benchamrk\" target=\"_blank\" rel=\"noopener\">https://github.com/ksk0014/block-storage-benchamrk</a></p>\n<h2 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h2><p>测试结果保存在文件中，格式如下图:</p>\n<p><img src=\"块存储性能测试/perf_tool_result.jpeg\" alt=\"性能测试结果\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"业务需求\"><a href=\"#业务需求\" class=\"headerlink\" title=\"业务需求\"></a>业务需求</h2><p>块存储服务推出后，需要针对各种产品宣称性能做基准性能评估。存储领域中性能评估指标主要分为三类IOPS、throughput、latency</p>\n<p>目前业界对于块存储的产品划分情况如下:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">产品类型</th>\n<th style=\"text-align:left\">性能特点</th>\n<th style=\"text-align:left\">应用场景</th>\n<th style=\"text-align:left\">主流厂商支持情况</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">near local</td>\n<td style=\"text-align:left\">&gt;= 本地ssd盘性能</td>\n<td style=\"text-align:left\">大型OLTP数据库/NoSQL数据库/ELK分布式日志</td>\n<td style=\"text-align:left\">阿里云ESSD</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SSD云盘</td>\n<td style=\"text-align:left\">20000IOPS左右</td>\n<td style=\"text-align:left\">I/O密集型应用/中型关系数据库/NoSQL数据库</td>\n<td style=\"text-align:left\">主流厂商均支持</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">高效云盘</td>\n<td style=\"text-align:left\">性能够用就好，5000IOPS左右</td>\n<td style=\"text-align:left\">开发与测试业务/小型负载数据库/系统盘</td>\n<td style=\"text-align:left\">主流厂商均支持</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">普通云盘</td>\n<td style=\"text-align:left\">sata介质，吞吐优化型500MBps，冷存储250MBps以下</td>\n<td style=\"text-align:left\">大数据/数据仓库/日志处理</td>\n<td style=\"text-align:left\">aws划分更细致，阿里云已淘汰</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"分层测试框架\"><a href=\"#分层测试框架\" class=\"headerlink\" title=\"分层测试框架\"></a>分层测试框架</h2><p>分布式块存储性能测试考量需要覆盖以下的层次:</p>\n<ol>\n<li>系统网络性能、物理磁盘性能测试</li>\n<li>存储核心系统读写性能测试，stress_tool、data_consistency_tool</li>\n<li>宿主机上云盘性能、以及虚拟机上的云盘性能，PTS测试模型，fio</li>\n<li>设备上文件系统性能测试，filebench，iozone等等</li>\n<li>实际应用负载测试，sysbench OLTP、分布式数据分析框架IO负载仿真</li>\n<li>用户常用操作的易用性</li>\n</ol>\n<p>块存储性能测试需要从两个视角看：</p>\n<ul>\n<li>用户维度：针对系统中单一卷实例可以获得稳定且可预期的性能，更多关注上述3 ~ 6的测试层次，本文主要讲解第3个层次的测试设计</li>\n<li>集群维度：针对集群可服务能力的性能评估，保障系统整体稳定可控，更多关注上述1 ~ 2的测试层次</li>\n</ul>\n<h2 id=\"PTS测试模型\"><a href=\"#PTS测试模型\" class=\"headerlink\" title=\"PTS测试模型\"></a>PTS测试模型</h2><p><strong>PTS：</strong> Solid State Storage Performance Test Specification<br>SNIA固态存储性能测试标准，相关文档参见 <a href=\"https://www.snia.org/sites/default/files/technical_work/PTS/SSS_PTS_2.0.1.pdf\" target=\"_blank\" rel=\"noopener\">SSS_PTS_2.0.1.pdf</a></p>\n<p>本文测试设计主要参考上述文档，并针对云环境做了相应适配</p>\n<h3 id=\"测试步骤\"><a href=\"#测试步骤\" class=\"headerlink\" title=\"测试步骤\"></a>测试步骤</h3><p>根据 PTS 规范，SSD 性能测试需要经过以下四个步骤：</p>\n<ol>\n<li>净化（purge）：通过擦除数据，将 SSD 置于接近 FOB 状态。</li>\n<li>事先准备工作负载（WIPC）：写入规定的数据到整个 SSD，帮助其达到稳态。</li>\n<li>正式测试之前的准备工作（WDPC）：循环运行测试，直到 SSD 进入稳态。</li>\n<li>测试：当 SSD 进入稳态时开始测试。</li>\n</ol>\n<p>备注:</p>\n<p><em>FOB:</em> Fresh of Box，新鲜出盒，即硬盘刚买来的状态<br><em>稳态:</em> 性能波动范围小于预先设定的阈值</p>\n<h3 id=\"测试项\"><a href=\"#测试项\" class=\"headerlink\" title=\"测试项\"></a>测试项</h3><h4 id=\"IOPS测试\"><a href=\"#IOPS测试\" class=\"headerlink\" title=\"IOPS测试\"></a>IOPS测试</h4><p>测试在不同block size与不同的read/write 比的混合下随机IO的性能<br>block size：100/0, 95/5, 65/35, 50/50, 35/65, 5/95, 0/100<br>read/write：1024KiB, 128KiB, 64KiB, 32KiB, 16KiB, 8KiB, 4KiB, 0.5KiB<br>磁盘IO的范围：100% volume size</p>\n<p>（1）purge<br>（2）WIPC：128k顺序写2倍的磁盘空间<br>（3）WDPC：上述工作负载（bs，r/w） loop运行<br>（4）稳态判定：取相邻4轮的4kb 随机 0/100的iops，相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口</p>\n<p>测试数据，取稳态窗口的均值</p>\n<h4 id=\"Throughput测试\"><a href=\"#Throughput测试\" class=\"headerlink\" title=\"Throughput测试\"></a>Throughput测试</h4><p>测试在稳态的128k与1m的顺序读与顺序写的吞吐<br>磁盘IO的范围：100% volume size</p>\n<p>（1）purge<br>（2）WIPC：128k顺序写或1M的顺序写2倍的磁盘空间<br>（3）WDPC：bs(128k,1M)和rw(100/0, 0/100) 顺序IO，loop，记录吞吐量<br>（4）稳态判定：取相邻4轮的吞吐，相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口</p>\n<p>测试数据，取稳态窗口的均值</p>\n<h4 id=\"延迟测试\"><a href=\"#延迟测试\" class=\"headerlink\" title=\"延迟测试\"></a>延迟测试</h4><p>测试在3种block sizes（0.5k，4k和8k），与三种读/写 比（100/0，65/35，0/100）混合下IO响应时间<br>磁盘IO的范围：100% volume size</p>\n<p>（1）purge<br>（2）WIPC：128k顺序写2倍的磁盘空间<br>（3）WDPC：bs(0.5k, 4k, 8k)和rw(100/0,  65/35, 0/100) 随机IO，loop，记录最大延迟与平均延迟<br>（4）稳态判定：取相邻4轮的平均延迟（0/100，4k），相对均值上下浮动在10%以内，即达到稳态，即取这四轮的测试数据为稳态窗口</p>\n<p>测试数据，取稳态窗口的均值</p>\n<h4 id=\"稳定性测试\"><a href=\"#稳定性测试\" class=\"headerlink\" title=\"稳定性测试\"></a>稳定性测试</h4><p>测试SSD性能是随着时间以及写入量的增加是如何变化的（1min的检测穿插着30分钟的WAST测试）</p>\n<p>（1）purge<br>（2）4k的随机写（100%），持续写入达到4倍的磁盘大小或者达到24h或者达到5轮的稳态（满足其一即可）<br>（3）iostat统计磁盘读写性能数据，取fio延迟波动方差的数据</p>\n<h2 id=\"测试工具\"><a href=\"#测试工具\" class=\"headerlink\" title=\"测试工具\"></a>测试工具</h2><p>代码路径: <a href=\"https://github.com/ksk0014/block-storage-benchamrk\" target=\"_blank\" rel=\"noopener\">https://github.com/ksk0014/block-storage-benchamrk</a></p>\n<h2 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h2><p>测试结果保存在文件中，格式如下图:</p>\n<p><img src=\"块存储性能测试/perf_tool_result.jpeg\" alt=\"性能测试结果\"></p>\n"},{"title":"离职工作总结","type":"categories","copyright":true,"date":"2018-05-07T09:52:12.000Z","_content":"\n2015.8.5 刚从台湾交换学习回大陆，当时周边的同学大都已经找好了实习工作，当时以为自己被就业市场抛弃了，慌慌张张的到处投简历，也拿到一些简历，最先拿到的是B厂的测试研发岗，好歹占了一个研发字样，就毫不犹豫的过去了。说实话，当时很鄙视做测试的，感觉一点技术含量都没，low。虽然后续也拿到猫厂的offer，但由于拥抱变化被降薪，果断拒了。\n \n在熊厂将近一年的实习时间里，学到了很多，测试不是一份low的工作，是另一种思维的工作，从用户角度度量产品质量，这是一种能力，它涵盖了研发人员普遍认为不重要或者潜意识里被忽视的方方面面，形象的比喻就是研发人员是低着头做事，测试人员是抬着头做事。由于还算认真的实习历练，老板X认可了我，转正之后，就开始独立负责一个项目的测试工作，也开始带了一些员工。遇到了一些新的挑战，在负责一个项目时，和之前做小弟时候不一样，各种事情都需要你操心，需要和老板汇报、和研发团队确认事务排期、和PM确认产品需求排期、和依赖服务确认进度，各种协调性的事务压的没有时间去思考自己到底学了什么？在带新人的时候，得考虑如何给每个人恰到好处的安排工作，得看到这个人惰性集中在哪个地方，然后“鞭策”他回到正确的轨道。带新人有成功的案例也有失败的案例，这给我在接下来面试新人的时候带来很多对于人的潜力的认知，受益无穷。在这个阶段，我认识到了一个团队的重要性，在这里我要很隆重的感谢在我项目组里的R同学，她真正让我理解了什么是1 + 1 > 2，个人英雄主义最多能支持走一时，团队才持久战的必要因素之一。秉持着这份信念，在接下来的1年多时间里，拿遍了所有体系内的个人奖项，不过很可惜，由于团队规模不大，没有得到团队的奖项。\n\n随着手中事务越做越重复，突然发现自己一天比一天轻松，即使是承接新项目测试，也没给我带来多大的动力，因为对于测试来说，一成不变的东西几乎占到日常工作的80%，加之碰到了个人和公司氛围的一些困境，工作越来越觉得无聊。还是简单吐槽一下吧，个人方面，因为进公司以后负责的更多是单一领域的测试工作，看到的面窄，觉得限制了自身的成长，于是自己提出了一套整个产品栈的测试方案，方案整体获得了经理和高工的支持，但无奈啊上下游协作的团队太短视，以为自己的饼会被抢了一样，极度不配合。我也是个嫉恶如仇的人，厌恶这种小肚鸡肠的作风，然后就互相给小鞋呗（这里我承认我的处理不够大气），anyway，哥就是这样的人。再说说公司氛围，给我的感觉是没有一种传承的传统，产品平台半年或者一年就会因为各种原因被抛弃，总需要新平台，述职才会好看嘛，更多的人不会去想想怎么把一个产品持续的打磨下去。还有一个问题，经常会有人吐槽度厂没有PM，其实更多的给我的感觉是，研发人员地位太牢靠了，只会低着头想自己的事，很少会见到主动去找研发以为的人沟通设计，更多的被动的接受外部的建议，然后看“心情”做不做，虽然说的有点过，但在我接触到的周边项目基本上是这样了。再说公司层面的战略问题，一年一个样，百度云虽然说是有ABC战略支撑，但是给我感觉老板并没有过多重视这个方向，没有气魄去砸人力物力（例如腾讯那样），导致现在在市场上第二梯队苦苦挣扎。算了，少吐槽一些，毕竟我在这里也学到了很多，遇到了很多靠谱的人。\n\n再说说找工作吧，也是很奇妙，因为我是测试的身份，想要找一份研发的工作，很难，不被各个公司认可，一度无望的时候，猫厂抛来了橄榄枝，除了猫厂的HR有点不靠谱以外（offer拖了一个多月才发），面试官总体给我的感觉是不错的，严谨认真负责，很感激god给我安排这第二份工作，给了自己一份重新清零的机会，重新审视一下自己，真正想要什么、有什么、能做什么，希望能在新的岗位上，开启事业的第二春！\n","source":"_posts/离职工作总结.md","raw":"---\ntitle: 离职工作总结\ntype: categories\ncopyright: true\ndate: 2018-05-07 17:52:12\ntags:\n- life\ncategories:\n- 随笔\n---\n\n2015.8.5 刚从台湾交换学习回大陆，当时周边的同学大都已经找好了实习工作，当时以为自己被就业市场抛弃了，慌慌张张的到处投简历，也拿到一些简历，最先拿到的是B厂的测试研发岗，好歹占了一个研发字样，就毫不犹豫的过去了。说实话，当时很鄙视做测试的，感觉一点技术含量都没，low。虽然后续也拿到猫厂的offer，但由于拥抱变化被降薪，果断拒了。\n \n在熊厂将近一年的实习时间里，学到了很多，测试不是一份low的工作，是另一种思维的工作，从用户角度度量产品质量，这是一种能力，它涵盖了研发人员普遍认为不重要或者潜意识里被忽视的方方面面，形象的比喻就是研发人员是低着头做事，测试人员是抬着头做事。由于还算认真的实习历练，老板X认可了我，转正之后，就开始独立负责一个项目的测试工作，也开始带了一些员工。遇到了一些新的挑战，在负责一个项目时，和之前做小弟时候不一样，各种事情都需要你操心，需要和老板汇报、和研发团队确认事务排期、和PM确认产品需求排期、和依赖服务确认进度，各种协调性的事务压的没有时间去思考自己到底学了什么？在带新人的时候，得考虑如何给每个人恰到好处的安排工作，得看到这个人惰性集中在哪个地方，然后“鞭策”他回到正确的轨道。带新人有成功的案例也有失败的案例，这给我在接下来面试新人的时候带来很多对于人的潜力的认知，受益无穷。在这个阶段，我认识到了一个团队的重要性，在这里我要很隆重的感谢在我项目组里的R同学，她真正让我理解了什么是1 + 1 > 2，个人英雄主义最多能支持走一时，团队才持久战的必要因素之一。秉持着这份信念，在接下来的1年多时间里，拿遍了所有体系内的个人奖项，不过很可惜，由于团队规模不大，没有得到团队的奖项。\n\n随着手中事务越做越重复，突然发现自己一天比一天轻松，即使是承接新项目测试，也没给我带来多大的动力，因为对于测试来说，一成不变的东西几乎占到日常工作的80%，加之碰到了个人和公司氛围的一些困境，工作越来越觉得无聊。还是简单吐槽一下吧，个人方面，因为进公司以后负责的更多是单一领域的测试工作，看到的面窄，觉得限制了自身的成长，于是自己提出了一套整个产品栈的测试方案，方案整体获得了经理和高工的支持，但无奈啊上下游协作的团队太短视，以为自己的饼会被抢了一样，极度不配合。我也是个嫉恶如仇的人，厌恶这种小肚鸡肠的作风，然后就互相给小鞋呗（这里我承认我的处理不够大气），anyway，哥就是这样的人。再说说公司氛围，给我的感觉是没有一种传承的传统，产品平台半年或者一年就会因为各种原因被抛弃，总需要新平台，述职才会好看嘛，更多的人不会去想想怎么把一个产品持续的打磨下去。还有一个问题，经常会有人吐槽度厂没有PM，其实更多的给我的感觉是，研发人员地位太牢靠了，只会低着头想自己的事，很少会见到主动去找研发以为的人沟通设计，更多的被动的接受外部的建议，然后看“心情”做不做，虽然说的有点过，但在我接触到的周边项目基本上是这样了。再说公司层面的战略问题，一年一个样，百度云虽然说是有ABC战略支撑，但是给我感觉老板并没有过多重视这个方向，没有气魄去砸人力物力（例如腾讯那样），导致现在在市场上第二梯队苦苦挣扎。算了，少吐槽一些，毕竟我在这里也学到了很多，遇到了很多靠谱的人。\n\n再说说找工作吧，也是很奇妙，因为我是测试的身份，想要找一份研发的工作，很难，不被各个公司认可，一度无望的时候，猫厂抛来了橄榄枝，除了猫厂的HR有点不靠谱以外（offer拖了一个多月才发），面试官总体给我的感觉是不错的，严谨认真负责，很感激god给我安排这第二份工作，给了自己一份重新清零的机会，重新审视一下自己，真正想要什么、有什么、能做什么，希望能在新的岗位上，开启事业的第二春！\n","slug":"离职工作总结","published":1,"updated":"2018-05-10T08:19:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh73ilrc000d1lcazugzag5z","content":"<p>2015.8.5 刚从台湾交换学习回大陆，当时周边的同学大都已经找好了实习工作，当时以为自己被就业市场抛弃了，慌慌张张的到处投简历，也拿到一些简历，最先拿到的是B厂的测试研发岗，好歹占了一个研发字样，就毫不犹豫的过去了。说实话，当时很鄙视做测试的，感觉一点技术含量都没，low。虽然后续也拿到猫厂的offer，但由于拥抱变化被降薪，果断拒了。</p>\n<p>在熊厂将近一年的实习时间里，学到了很多，测试不是一份low的工作，是另一种思维的工作，从用户角度度量产品质量，这是一种能力，它涵盖了研发人员普遍认为不重要或者潜意识里被忽视的方方面面，形象的比喻就是研发人员是低着头做事，测试人员是抬着头做事。由于还算认真的实习历练，老板X认可了我，转正之后，就开始独立负责一个项目的测试工作，也开始带了一些员工。遇到了一些新的挑战，在负责一个项目时，和之前做小弟时候不一样，各种事情都需要你操心，需要和老板汇报、和研发团队确认事务排期、和PM确认产品需求排期、和依赖服务确认进度，各种协调性的事务压的没有时间去思考自己到底学了什么？在带新人的时候，得考虑如何给每个人恰到好处的安排工作，得看到这个人惰性集中在哪个地方，然后“鞭策”他回到正确的轨道。带新人有成功的案例也有失败的案例，这给我在接下来面试新人的时候带来很多对于人的潜力的认知，受益无穷。在这个阶段，我认识到了一个团队的重要性，在这里我要很隆重的感谢在我项目组里的R同学，她真正让我理解了什么是1 + 1 &gt; 2，个人英雄主义最多能支持走一时，团队才持久战的必要因素之一。秉持着这份信念，在接下来的1年多时间里，拿遍了所有体系内的个人奖项，不过很可惜，由于团队规模不大，没有得到团队的奖项。</p>\n<p>随着手中事务越做越重复，突然发现自己一天比一天轻松，即使是承接新项目测试，也没给我带来多大的动力，因为对于测试来说，一成不变的东西几乎占到日常工作的80%，加之碰到了个人和公司氛围的一些困境，工作越来越觉得无聊。还是简单吐槽一下吧，个人方面，因为进公司以后负责的更多是单一领域的测试工作，看到的面窄，觉得限制了自身的成长，于是自己提出了一套整个产品栈的测试方案，方案整体获得了经理和高工的支持，但无奈啊上下游协作的团队太短视，以为自己的饼会被抢了一样，极度不配合。我也是个嫉恶如仇的人，厌恶这种小肚鸡肠的作风，然后就互相给小鞋呗（这里我承认我的处理不够大气），anyway，哥就是这样的人。再说说公司氛围，给我的感觉是没有一种传承的传统，产品平台半年或者一年就会因为各种原因被抛弃，总需要新平台，述职才会好看嘛，更多的人不会去想想怎么把一个产品持续的打磨下去。还有一个问题，经常会有人吐槽度厂没有PM，其实更多的给我的感觉是，研发人员地位太牢靠了，只会低着头想自己的事，很少会见到主动去找研发以为的人沟通设计，更多的被动的接受外部的建议，然后看“心情”做不做，虽然说的有点过，但在我接触到的周边项目基本上是这样了。再说公司层面的战略问题，一年一个样，百度云虽然说是有ABC战略支撑，但是给我感觉老板并没有过多重视这个方向，没有气魄去砸人力物力（例如腾讯那样），导致现在在市场上第二梯队苦苦挣扎。算了，少吐槽一些，毕竟我在这里也学到了很多，遇到了很多靠谱的人。</p>\n<p>再说说找工作吧，也是很奇妙，因为我是测试的身份，想要找一份研发的工作，很难，不被各个公司认可，一度无望的时候，猫厂抛来了橄榄枝，除了猫厂的HR有点不靠谱以外（offer拖了一个多月才发），面试官总体给我的感觉是不错的，严谨认真负责，很感激god给我安排这第二份工作，给了自己一份重新清零的机会，重新审视一下自己，真正想要什么、有什么、能做什么，希望能在新的岗位上，开启事业的第二春！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>2015.8.5 刚从台湾交换学习回大陆，当时周边的同学大都已经找好了实习工作，当时以为自己被就业市场抛弃了，慌慌张张的到处投简历，也拿到一些简历，最先拿到的是B厂的测试研发岗，好歹占了一个研发字样，就毫不犹豫的过去了。说实话，当时很鄙视做测试的，感觉一点技术含量都没，low。虽然后续也拿到猫厂的offer，但由于拥抱变化被降薪，果断拒了。</p>\n<p>在熊厂将近一年的实习时间里，学到了很多，测试不是一份low的工作，是另一种思维的工作，从用户角度度量产品质量，这是一种能力，它涵盖了研发人员普遍认为不重要或者潜意识里被忽视的方方面面，形象的比喻就是研发人员是低着头做事，测试人员是抬着头做事。由于还算认真的实习历练，老板X认可了我，转正之后，就开始独立负责一个项目的测试工作，也开始带了一些员工。遇到了一些新的挑战，在负责一个项目时，和之前做小弟时候不一样，各种事情都需要你操心，需要和老板汇报、和研发团队确认事务排期、和PM确认产品需求排期、和依赖服务确认进度，各种协调性的事务压的没有时间去思考自己到底学了什么？在带新人的时候，得考虑如何给每个人恰到好处的安排工作，得看到这个人惰性集中在哪个地方，然后“鞭策”他回到正确的轨道。带新人有成功的案例也有失败的案例，这给我在接下来面试新人的时候带来很多对于人的潜力的认知，受益无穷。在这个阶段，我认识到了一个团队的重要性，在这里我要很隆重的感谢在我项目组里的R同学，她真正让我理解了什么是1 + 1 &gt; 2，个人英雄主义最多能支持走一时，团队才持久战的必要因素之一。秉持着这份信念，在接下来的1年多时间里，拿遍了所有体系内的个人奖项，不过很可惜，由于团队规模不大，没有得到团队的奖项。</p>\n<p>随着手中事务越做越重复，突然发现自己一天比一天轻松，即使是承接新项目测试，也没给我带来多大的动力，因为对于测试来说，一成不变的东西几乎占到日常工作的80%，加之碰到了个人和公司氛围的一些困境，工作越来越觉得无聊。还是简单吐槽一下吧，个人方面，因为进公司以后负责的更多是单一领域的测试工作，看到的面窄，觉得限制了自身的成长，于是自己提出了一套整个产品栈的测试方案，方案整体获得了经理和高工的支持，但无奈啊上下游协作的团队太短视，以为自己的饼会被抢了一样，极度不配合。我也是个嫉恶如仇的人，厌恶这种小肚鸡肠的作风，然后就互相给小鞋呗（这里我承认我的处理不够大气），anyway，哥就是这样的人。再说说公司氛围，给我的感觉是没有一种传承的传统，产品平台半年或者一年就会因为各种原因被抛弃，总需要新平台，述职才会好看嘛，更多的人不会去想想怎么把一个产品持续的打磨下去。还有一个问题，经常会有人吐槽度厂没有PM，其实更多的给我的感觉是，研发人员地位太牢靠了，只会低着头想自己的事，很少会见到主动去找研发以为的人沟通设计，更多的被动的接受外部的建议，然后看“心情”做不做，虽然说的有点过，但在我接触到的周边项目基本上是这样了。再说公司层面的战略问题，一年一个样，百度云虽然说是有ABC战略支撑，但是给我感觉老板并没有过多重视这个方向，没有气魄去砸人力物力（例如腾讯那样），导致现在在市场上第二梯队苦苦挣扎。算了，少吐槽一些，毕竟我在这里也学到了很多，遇到了很多靠谱的人。</p>\n<p>再说说找工作吧，也是很奇妙，因为我是测试的身份，想要找一份研发的工作，很难，不被各个公司认可，一度无望的时候，猫厂抛来了橄榄枝，除了猫厂的HR有点不靠谱以外（offer拖了一个多月才发），面试官总体给我的感觉是不错的，严谨认真负责，很感激god给我安排这第二份工作，给了自己一份重新清零的机会，重新审视一下自己，真正想要什么、有什么、能做什么，希望能在新的岗位上，开启事业的第二春！</p>\n"},{"title":"HA方案概述","_content":"","source":"_drafts/HA方案概述.md","raw":"---\ntitle: HA方案概述\ntags:\n---\n","slug":"HA方案概述","published":0,"date":"2018-05-10T08:38:52.000Z","updated":"2018-05-10T08:38:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh73ilrg000h1lcatu29uwgy","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"QJM方案改进","_content":"","source":"_drafts/QJM方案改进.md","raw":"---\ntitle: QJM方案改进\ntags:\n---\n","slug":"QJM方案改进","published":0,"date":"2018-05-10T08:37:55.000Z","updated":"2018-05-10T08:37:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh73ilri000j1lcahzmdap8d","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"phxpaxos代码阅读笔记（一）","_content":"","source":"_drafts/phxpaxos代码阅读笔记（一）.md","raw":"---\ntitle: phxpaxos代码阅读笔记（一）\ntags:\n---\n","slug":"phxpaxos代码阅读笔记（一）","published":0,"date":"2018-05-14T14:14:30.000Z","updated":"2018-05-14T14:14:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh73ilrk000n1lcakyw3ghw3","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"braft代码阅读笔记（一）","_content":"","source":"_drafts/braft代码阅读笔记（一）.md","raw":"---\ntitle: braft代码阅读笔记（一）\ntags:\n---\n","slug":"braft代码阅读笔记（一）","published":0,"date":"2018-05-14T14:14:40.000Z","updated":"2018-05-14T14:14:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh73ilrl000p1lca0ulxdr7c","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"raft算法理解","_content":"","source":"_drafts/raft算法理解.md","raw":"---\ntitle: raft算法理解\ntags:\n---\n","slug":"raft算法理解","published":0,"date":"2018-05-10T08:37:24.000Z","updated":"2018-05-10T08:37:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh73ilrn000t1lcaho4zwvb1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"深入浅出SSD阅读笔记（一）","_content":"","source":"_drafts/深入浅出SSD阅读笔记（一）.md","raw":"---\ntitle: 深入浅出SSD阅读笔记（一）\ntags:\n---\n","slug":"深入浅出SSD阅读笔记（一）","published":0,"date":"2018-05-14T14:18:32.000Z","updated":"2018-05-14T14:18:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh73ilxr00161lcarei8flht","content":"","site":{"data":{}},"excerpt":"","more":""}],"PostAsset":[{"_id":"source/_posts/paxos算法理解/WechatIMG3614.jpeg","slug":"WechatIMG3614.jpeg","post":"cjh73ilr400061lca9vlzqydh","modified":1,"renderable":0},{"_id":"source/_posts/块存储性能测试/perf_tool_result.jpeg","slug":"perf_tool_result.jpeg","post":"cjh73ilra000c1lcalnr5tabg","modified":1,"renderable":0}],"PostCategory":[{"post_id":"cjh73ilqw00021lcaw3cq5a9i","category_id":"cjh73ilr200041lca0zkw2ev2","_id":"cjh73ilre000e1lcaijac5a4v"},{"post_id":"cjh73ilqz00031lcag3fluj0a","category_id":"cjh73ilr900091lcas8pqk9q4","_id":"cjh73ilrk000l1lcaf8654ae7"},{"post_id":"cjh73ilr400061lca9vlzqydh","category_id":"cjh73ilr200041lca0zkw2ev2","_id":"cjh73ilrm000q1lca5bwakrwy"},{"post_id":"cjh73ilr600071lcaw39b6q0l","category_id":"cjh73ilrj000k1lcaf9dedwct","_id":"cjh73ilrp000v1lcarcedmh9l"},{"post_id":"cjh73ilr800081lcamzo606fx","category_id":"cjh73ilrn000r1lcal37f7d86","_id":"cjh73ilrq00101lca9qghbubi"},{"post_id":"cjh73ilra000c1lcalnr5tabg","category_id":"cjh73ilrj000k1lcaf9dedwct","_id":"cjh73ilrq00131lcaw80jtyxu"},{"post_id":"cjh73ilrc000d1lcazugzag5z","category_id":"cjh73ilrq000z1lcaxvhdtwoz","_id":"cjh73ilrr00151lcad4j27n96"}],"PostTag":[{"post_id":"cjh73ilqw00021lcaw3cq5a9i","tag_id":"cjh73ilr400051lcapfac0usn","_id":"cjh73ilra000b1lcalbf8cq1g"},{"post_id":"cjh73ilqz00031lcag3fluj0a","tag_id":"cjh73ilr9000a1lcaarqjy8zj","_id":"cjh73ilrh000i1lcamunhjl8x"},{"post_id":"cjh73ilr400061lca9vlzqydh","tag_id":"cjh73ilre000g1lca0xybv3nd","_id":"cjh73ilrl000o1lcamcz7ji46"},{"post_id":"cjh73ilr600071lcaw39b6q0l","tag_id":"cjh73ilrk000m1lcawt4prqdx","_id":"cjh73ilro000u1lcae34apc4a"},{"post_id":"cjh73ilr800081lcamzo606fx","tag_id":"cjh73ilr9000a1lcaarqjy8zj","_id":"cjh73ilrp000y1lcabb4faq9g"},{"post_id":"cjh73ilra000c1lcalnr5tabg","tag_id":"cjh73ilrp000x1lcaxizcx80n","_id":"cjh73ilrq00121lcaw1qmlgbb"},{"post_id":"cjh73ilrc000d1lcazugzag5z","tag_id":"cjh73ilrq00111lca4omo8lu8","_id":"cjh73ilrr00141lcac3doq2ax"}],"Tag":[{"name":"QJM","_id":"cjh73ilr400051lcapfac0usn"},{"name":"Tools","_id":"cjh73ilr9000a1lcaarqjy8zj"},{"name":"paxos","_id":"cjh73ilre000g1lca0xybv3nd"},{"name":"Testing Framework","_id":"cjh73ilrk000m1lcawt4prqdx"},{"name":"Testing Phase","_id":"cjh73ilrp000x1lcaxizcx80n"},{"name":"life","_id":"cjh73ilrq00111lca4omo8lu8"}]}}